<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Potter&#39;s Blog</title>
  
  <subtitle>努力成为更强大的自我</subtitle>
  <link href="https://yanxuewen.cn/atom.xml" rel="self"/>
  
  <link href="https://yanxuewen.cn/"/>
  <updated>2021-05-13T14:39:18.130Z</updated>
  <id>https://yanxuewen.cn/</id>
  
  <author>
    <name>Potter</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>uniapp 入门实战 02：编译时动态替换配置方案</title>
    <link href="https://yanxuewen.cn/2021/05/13/UniApp02/"/>
    <id>https://yanxuewen.cn/2021/05/13/UniApp02/</id>
    <published>2021-05-13T14:35:37.914Z</published>
    <updated>2021-05-13T14:39:18.130Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概要内容"><a href="#概要内容" class="headerlink" title="概要内容"></a>概要内容</h2><ul><li>通过vue.config 实现</li><li>示例</li></ul><hr><a id="more"></a><h2 id="通过vue-config-实现"><a href="#通过vue-config-实现" class="headerlink" title="通过vue.config 实现"></a>通过vue.config 实现</h2><hr><p>由于我们公司业务需求，同一份uniapp项目代码需搞出两个不同名称的小程序，所以每次切换项目配置时，需要改好几处配置信息。根据以前的经验，就是通过webpack编译时，动态选择不同的配置。看到工程项目结构后我傻眼了，编译相关的uniapp 框架完全封装继承完，让人无需关系。问题是现在我需要啊~… </p><p><img data-src="https://cdn.jsdelivr.net/gh/yxw007/BlogPicBed@master//img/20210513221230.png" alt="https://cdn.jsdelivr.net/gh/yxw007/BlogPicBed@master//img/20210513221230.png"></p><p>先google一下，uniapp 编译相关的找不到相关配置。只好翻uniapp 官网，看到以下信息，希望就在眼前。</p><p><img data-src="https://cdn.jsdelivr.net/gh/yxw007/BlogPicBed@master//img/20210513222337.png" alt="https://cdn.jsdelivr.net/gh/yxw007/BlogPicBed@master//img/20210513222337.png"></p><p>所以解决方案就来了  😜</p><h2 id="示例："><a href="#示例：" class="headerlink" title="示例："></a>示例：</h2><ul><li><p>首先：项目根目录创建vue.config.js</p><p>  <img data-src="https://cdn.jsdelivr.net/gh/yxw007/BlogPicBed@master//img/20210513222808.png" alt="https://cdn.jsdelivr.net/gh/yxw007/BlogPicBed@master//img/20210513222808.png"></p></li><li><p>其次：vue.config.js（替换微信小程序appid）</p>  <figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 创建日期: 2021-05-13</span></span><br><span class="line"><span class="comment">* 文件名称：vue.config.js</span></span><br><span class="line"><span class="comment">* 创建作者：Potter</span></span><br><span class="line"><span class="comment">* 开发版本：1.0.0</span></span><br><span class="line"><span class="comment">* 相关说明：</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//-------------------------------------------------------------------------</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;------------------------------------------&quot;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;Compile [Auto replace config]: Go...&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"><span class="comment">//-------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 读取launch_config.json 配置</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">let</span> serverConfig = <span class="literal">undefined</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">const</span> data = fs.readFileSync(path.join(__dirname, <span class="string">&#x27;./static/launch_config.json&#x27;</span>), <span class="string">&#x27;utf8&#x27;</span>);</span><br><span class="line"><span class="keyword">let</span> launchConfig = <span class="built_in">JSON</span>.parse(data);</span><br><span class="line">serverConfig = launchConfig[<span class="string">&quot;server_configs&quot;</span>][launchConfig[<span class="string">&quot;server&quot;</span>]];</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;Compile [Auto replace config] : current choice configInfo=&quot;</span> + <span class="built_in">JSON</span>.stringify(serverConfig));</span><br><span class="line">&#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line"><span class="built_in">console</span>.error(<span class="string">&quot;Compile [Auto replace config] : read lanch_config error ! e=&quot;</span> + e);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//-------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 读取manifest.json, 采用当前渲染server_config 替换掉manifest.json 中的对应字段</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">const</span> manifestPath = path.join(__dirname, <span class="string">&#x27;./manifest.json&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> data = fs.readFileSync(manifestPath, <span class="string">&#x27;utf8&#x27;</span>);</span><br><span class="line"><span class="keyword">let</span> manifest = <span class="built_in">JSON</span>.parse(data);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;Compile [Auto replace config] : manifest &quot;</span> + <span class="string">`appid[<span class="subst">$&#123;manifest[<span class="string">&quot;mp-weixin&quot;</span>][<span class="string">&#x27;appid&#x27;</span>]&#125;</span>-&gt;<span class="subst">$&#123;serverConfig[<span class="string">&#x27;appid&#x27;</span>]&#125;</span>]`</span>);</span><br><span class="line">manifest[<span class="string">&quot;mp-weixin&quot;</span>][<span class="string">&#x27;appid&#x27;</span>] = serverConfig[<span class="string">&#x27;appid&#x27;</span>];</span><br><span class="line"></span><br><span class="line">fs.writeFileSync(manifestPath, <span class="built_in">JSON</span>.stringify(manifest, <span class="literal">null</span>, <span class="number">4</span>));</span><br><span class="line">&#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line"><span class="built_in">console</span>.error(<span class="string">&quot;Compile [Auto replace config] : read manifest error ! e=&quot;</span> + e);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//-------------------------------------------------------------------------</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;Compile [Auto replace config]: Complete !&quot;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;------------------------------------------&quot;</span>);</span><br></pre></td></tr></table></figure></li><li><p>最后：运行即可，可以看到以下appid 已替换</p><p>  <img data-src="https://cdn.jsdelivr.net/gh/yxw007/BlogPicBed@master//img/20210513223413.png" alt="https://cdn.jsdelivr.net/gh/yxw007/BlogPicBed@master//img/20210513223413.png"></p></li></ul><hr><blockquote><p>以上：如发现有问题，欢迎留言指出，我及时更正</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;概要内容&quot;&gt;&lt;a href=&quot;#概要内容&quot; class=&quot;headerlink&quot; title=&quot;概要内容&quot;&gt;&lt;/a&gt;概要内容&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;通过vue.config 实现&lt;/li&gt;
&lt;li&gt;示例&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;</summary>
    
    
    
    <category term="uniapp 入门实战" scheme="https://yanxuewen.cn/categories/uniapp-%E5%85%A5%E9%97%A8%E5%AE%9E%E6%88%98/"/>
    
    
    <category term="UniApp" scheme="https://yanxuewen.cn/tags/UniApp/"/>
    
  </entry>
  
  <entry>
    <title>Vue3.x + Vite2.x 入门实战 06：Keep-alive 动态配置include实现页面缓存</title>
    <link href="https://yanxuewen.cn/2021/04/29/Vue3.x_Vite2.x-06/"/>
    <id>https://yanxuewen.cn/2021/04/29/Vue3.x_Vite2.x-06/</id>
    <published>2021-04-29T10:35:08.172Z</published>
    <updated>2021-05-12T01:43:39.451Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概要内容"><a href="#概要内容" class="headerlink" title="概要内容"></a>概要内容</h2><ul><li>实现步骤<ul><li>第一步：利用store状态管理缓存页面</li><li>第二步：布局layout组件添加router-view相关配置</li><li>第三步：在需要缓存的页面，添加路由守卫</li></ul></li><li>总结</li></ul><a id="more"></a><hr><h2 id="实现步骤"><a href="#实现步骤" class="headerlink" title="实现步骤"></a>实现步骤</h2><hr><ul><li><p>第一步：利用store状态管理缓存页面</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; src&#x2F;store&#x2F;modules&#x2F;KeepAlive.ts</span><br><span class="line">&#x2F;&#x2F;-------------------------------------------------------------------------</span><br><span class="line">const keepAliveModule &#x3D; &#123;</span><br><span class="line">    namespaced: true,</span><br><span class="line">    state: &#123;</span><br><span class="line">        caches: [],</span><br><span class="line">    &#125;,</span><br><span class="line">    mutations: &#123;</span><br><span class="line">        ADD(state, name) &#123;</span><br><span class="line">            if (state.caches.indexOf(name) &lt; 0) &#123;</span><br><span class="line">                state.caches.push(name)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        REMOVE(state, name) &#123;</span><br><span class="line">            state.caches &#x3D; state.caches.filter(item &#x3D;&gt; item !&#x3D; name);</span><br><span class="line">        &#125;,</span><br><span class="line">        CLEAN(state) &#123;</span><br><span class="line">            state.caches &#x3D; [];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;-------------------------------------------------------------------------</span><br><span class="line">export default keepAliveModule;</span><br><span class="line">&#x2F;&#x2F;-------------------------------------------------------------------------</span><br></pre></td></tr></table></figure>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; src&#x2F;store&#x2F;index.ts</span><br><span class="line">import &#123; createStore &#125; from &#39;vuex&#39;</span><br><span class="line">import keepAliveModule from &#39;.&#x2F;modules&#x2F;KeepAlive&#39;;</span><br><span class="line">&#x2F;&#x2F;-------------------------------------------------------------------------</span><br><span class="line">const store &#x3D; createStore(&#123;</span><br><span class="line">    modules: &#123;</span><br><span class="line">        keepAlive: keepAliveModule</span><br><span class="line">    &#125;,</span><br><span class="line">    getters: &#123;</span><br><span class="line">        keepAlive: (state) &#x3D;&gt; (state as any).keepAlive,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#x2F;&#x2F;-------------------------------------------------------------------------</span><br><span class="line">export default store;</span><br><span class="line">&#x2F;&#x2F;-------------------------------------------------------------------------</span><br></pre></td></tr></table></figure></li><li><p>第二步：布局layout组件添加router-view相关配置</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;MainWrapper&quot;&gt;</span><br><span class="line">      &lt;router-view v-slot&#x3D;&quot;&#123; Component &#125;&quot;&gt;</span><br><span class="line">        &lt;transition&gt;</span><br><span class="line">          &lt;keep-alive :include&#x3D;&quot;$store.state.keepAlive.caches&quot;&gt;</span><br><span class="line">            &lt;component :is&#x3D;&quot;Component&quot; &#x2F;&gt;</span><br><span class="line">          &lt;&#x2F;keep-alive&gt;</span><br><span class="line">        &lt;&#x2F;transition&gt;</span><br><span class="line">    &lt;&#x2F;router-view&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br></pre></td></tr></table></figure></li><li><p>第三步：在需要缓存的页面，添加路由守卫</p><ul><li>beforeRouteEnter：添加缓存页面</li><li>beforeRouteLeave：删除缓存页面</li><li><p>提示：控制逻辑放置一块，方便管理</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;src&#x2F;views&#x2F;variety.vue</span><br><span class="line">export default defineComponent(&#123;</span><br><span class="line">  name: &quot;variety&quot;,</span><br><span class="line">  components: &#123;</span><br><span class="line">  &#125;,</span><br><span class="line">  setup(props, context) &#123;</span><br><span class="line">  &#125;,</span><br><span class="line">  beforeRouteEnter(to, from, next) &#123;</span><br><span class="line">    if (to.path &#x3D;&#x3D; &quot;&#x2F;product&#x2F;variety&quot;) &#123;</span><br><span class="line">      store.commit(&quot;keepAlive&#x2F;ADD&quot;, to.name);</span><br><span class="line">    &#125;</span><br><span class="line">    next();</span><br><span class="line">  &#125;,</span><br><span class="line">  beforeRouteLeave(to, from, next) &#123;</span><br><span class="line">    if (to.name !&#x3D; &quot;pic-editor&quot;) &#123;</span><br><span class="line">      store.commit(&quot;keepAlive&#x2F;REMOVE&quot;, from.name);</span><br><span class="line">    &#125;</span><br><span class="line">    next();</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul><li>特别提醒：keep-alive :include 使用的是页面组件name，所以一定要记得给页面组件命名</li></ul><hr><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul><li><a href="https://hooray.github.io/posts/5dc60183/">使用 keep-alive 的 include 属性实现 Vue 页面缓存</a></li></ul><hr><blockquote><p>以上：如发现有问题，欢迎留言指出，我及时更正</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;概要内容&quot;&gt;&lt;a href=&quot;#概要内容&quot; class=&quot;headerlink&quot; title=&quot;概要内容&quot;&gt;&lt;/a&gt;概要内容&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;实现步骤&lt;ul&gt;
&lt;li&gt;第一步：利用store状态管理缓存页面&lt;/li&gt;
&lt;li&gt;第二步：布局layout组件添加router-view相关配置&lt;/li&gt;
&lt;li&gt;第三步：在需要缓存的页面，添加路由守卫&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;总结&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Vue3.x + Vite2.x 入门实战" scheme="https://yanxuewen.cn/categories/Vue3-x-Vite2-x-%E5%85%A5%E9%97%A8%E5%AE%9E%E6%88%98/"/>
    
    
    <category term="页面缓存" scheme="https://yanxuewen.cn/tags/%E9%A1%B5%E9%9D%A2%E7%BC%93%E5%AD%98/"/>
    
    <category term="Keep-alive" scheme="https://yanxuewen.cn/tags/Keep-alive/"/>
    
  </entry>
  
  <entry>
    <title>Vue3.x + Vite2.x 入门实战 04：不管怎么设置z-index值，元素层级仍然不对</title>
    <link href="https://yanxuewen.cn/2021/04/09/Vue3.x_Vite2.x-04/"/>
    <id>https://yanxuewen.cn/2021/04/09/Vue3.x_Vite2.x-04/</id>
    <published>2021-04-09T04:07:23.752Z</published>
    <updated>2021-05-12T01:43:52.598Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>编写页面布局时，必定会碰到的问题，不管怎么设置z-index值，元素都被挡住。原因：没有真正理解CSS层叠样式是啥</p></blockquote><h3 id="概要内容"><a href="#概要内容" class="headerlink" title="概要内容"></a>概要内容</h3><ul><li>元素层级不对情况</li><li>解决层级不对方案</li><li>总结</li></ul><a id="more"></a><h2 id="元素层级不对情况"><a href="#元素层级不对情况" class="headerlink" title="元素层级不对情况"></a>元素层级不对情况</h2><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><ul><li><p>html</p>  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">section</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;side-tab&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>css</p>  <figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.content</span> &#123;</span><br><span class="line"><span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.modal</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">100</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.side-tab</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">5</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><ul><li>遮挡情况</li></ul><p><img data-src="https://cdn.jsdelivr.net/gh/yxw007/BlogPicBed@master//img/20210409112623.png" alt="https://cdn.jsdelivr.net/gh/yxw007/BlogPicBed@master//img/20210409112623.png"></p><ul><li>正常情况</li></ul><p><img data-src="https://cdn.jsdelivr.net/gh/yxw007/BlogPicBed@master//img/20210409113631.png" alt="https://cdn.jsdelivr.net/gh/yxw007/BlogPicBed@master//img/20210409113631.png"></p><hr><h2 id="解决层级不对方案"><a href="#解决层级不对方案" class="headerlink" title="解决层级不对方案"></a>解决层级不对方案</h2><h3 id="方案一："><a href="#方案一：" class="headerlink" title="方案一："></a>方案一：</h3><ul><li>步骤1：遮挡元素和被遮挡元素，调整到相同父节点下</li><li>步骤2：调整z-index值</li><li><p>示例</p><ul><li><p>html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">section</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- modal 移出来放到同级, z-index 就生效了 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;side-tab&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>css</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.content</span> &#123;</span><br><span class="line"><span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.modal</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">100</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.side-tab</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">5</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="方案二："><a href="#方案二：" class="headerlink" title="方案二："></a>方案二：</h3><ul><li>步骤1：去掉被遮挡的父元素postion熟悉</li><li>步骤2：调整z-index值</li><li><p>示例</p><ul><li><p>html</p>  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">section</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;side-tab&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>css</p>  <figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.content</span> &#123;</span><br><span class="line"><span class="comment">//position: relative;</span></span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.modal</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">100</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.side-tab</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">5</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><blockquote><p>先按元素先后顺序层叠摆放，再按z-index属性调整层级次序叠放</p></blockquote><ul><li>CSS是层叠样式<ul><li>无postion时，元素按先后顺序一层一层叠放绘制的</li><li>有postion时，可通过z-index 调整同级元素的层级</li><li>子元素要想突破父元素层叠限制，请删除父元素postion 属性</li></ul></li><li>感悟：接触CSS就应该先搞懂层叠是个啥玩意儿，不然层级问题会搞得你摸不着头脑。贴个chrome layer图（Chrome位置：More tools/layers）</li></ul><p><img data-src="https://cdn.jsdelivr.net/gh/yxw007/BlogPicBed@master//img/20210409115545.png" alt="https://cdn.jsdelivr.net/gh/yxw007/BlogPicBed@master//img/20210409115545.png"></p><h2 id="参考文献："><a href="#参考文献：" class="headerlink" title="参考文献："></a>参考文献：</h2><ul><li><a href="https://coder-coder.com/z-index-isnt-working/">4 reasons your z-index isn’t working (and how to fix it)</a></li></ul><hr><blockquote><p>以上: 如发现有问题，欢迎留言指出，我及时更正</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;编写页面布局时，必定会碰到的问题，不管怎么设置z-index值，元素都被挡住。原因：没有真正理解CSS层叠样式是啥&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;概要内容&quot;&gt;&lt;a href=&quot;#概要内容&quot; class=&quot;headerlink&quot; title=&quot;概要内容&quot;&gt;&lt;/a&gt;概要内容&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;元素层级不对情况&lt;/li&gt;
&lt;li&gt;解决层级不对方案&lt;/li&gt;
&lt;li&gt;总结&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Vue3.x + Vite2.x 入门实战" scheme="https://yanxuewen.cn/categories/Vue3-x-Vite2-x-%E5%85%A5%E9%97%A8%E5%AE%9E%E6%88%98/"/>
    
    
    <category term="z-index" scheme="https://yanxuewen.cn/tags/z-index/"/>
    
    <category term="css" scheme="https://yanxuewen.cn/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>Vue3.x + Vite2.x 入门实战 03：二次封装el-input组件</title>
    <link href="https://yanxuewen.cn/2021/04/02/Vue3.x_Vite2.x-03/"/>
    <id>https://yanxuewen.cn/2021/04/02/Vue3.x_Vite2.x-03/</id>
    <published>2021-04-02T04:14:09.889Z</published>
    <updated>2021-05-12T01:43:53.796Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>element-plus 提供了非常多通用的组件，但要满足特定产品需求效果还是略有差异，所以需再次封装。</p></blockquote><h2 id="概要内容"><a href="#概要内容" class="headerlink" title="概要内容"></a>概要内容</h2><ul><li>怎么封装成子组件？</li><li>怎么使用封装组件？</li></ul><a id="more"></a><h2 id="效果对比"><a href="#效果对比" class="headerlink" title="效果对比"></a>效果对比</h2><ul><li><p>原始效果</p><p>  <img data-src="https://cdn.jsdelivr.net/gh/yxw007/BlogPicBed@master//img/20210402123602.png" alt=""></p></li><li><p>封装后效果</p><p>  <img data-src="https://cdn.jsdelivr.net/gh/yxw007/BlogPicBed@master//img/20210402123609.png" alt=""></p></li></ul><h2 id="怎么封装成子组件？"><a href="#怎么封装成子组件？" class="headerlink" title="怎么封装成子组件？"></a>怎么封装成子组件？</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;contain&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-input</span></span></span><br><span class="line"><span class="tag">      <span class="attr">class</span>=<span class="string">&quot;input&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:class</span>=<span class="string">&quot;&#123; &#x27;red-border&#x27;: tips.length &gt; 0 &#125;&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">v-model</span>=<span class="string">&quot;value&quot;</span></span></span><br><span class="line"><span class="tag">      @<span class="attr">input</span>=<span class="string">&quot;onInput&quot;</span></span></span><br><span class="line"><span class="tag">      @<span class="attr">change</span>=<span class="string">&quot;$emit(&#x27;onChange&#x27;)&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:placeholder</span>=<span class="string">&quot;placeholder&quot;</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">template</span> #<span class="attr">prefix</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">i</span> <span class="attr">:class</span>=<span class="string">&quot;[&#x27;iconfont&#x27;, iconName]&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tips&quot;</span> <span class="attr">v-if</span>=<span class="string">&quot;tips.length &gt; 0&quot;</span>&gt;</span></span><br><span class="line">      &#123;&#123; tips &#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> &#123; defineComponent, reactive, ref, watch, toRefs &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> &#123; ElInput &#125; <span class="keyword">from</span> <span class="string">&quot;element-plus&quot;</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> defineComponent(&#123;</span></span><br><span class="line"><span class="javascript">  name: <span class="string">&quot;CustomInput&quot;</span>,</span></span><br><span class="line">  components: &#123; ElInput &#125;,</span><br><span class="line">  props: &#123;</span><br><span class="line">    modelValue: &#123;</span><br><span class="line"><span class="javascript">      type: [<span class="built_in">String</span>, <span class="built_in">Number</span>],</span></span><br><span class="line"><span class="javascript">      <span class="keyword">default</span>: <span class="string">&quot;&quot;</span>,</span></span><br><span class="line">    &#125;,</span><br><span class="line"><span class="javascript">    placeholder: &#123; <span class="attr">type</span>: <span class="built_in">String</span>, <span class="attr">default</span>: <span class="string">&quot;&quot;</span> &#125;,</span></span><br><span class="line"><span class="javascript">    oninput: &#123; <span class="attr">type</span>: <span class="built_in">String</span>, <span class="attr">default</span>: <span class="string">&quot;&quot;</span> &#125;,</span></span><br><span class="line"><span class="javascript">    iconName: &#123; <span class="attr">type</span>: <span class="built_in">String</span>, <span class="attr">default</span>: <span class="string">&quot;&quot;</span> &#125;,</span></span><br><span class="line"><span class="javascript">    tips: &#123; <span class="attr">type</span>: <span class="built_in">String</span>, <span class="attr">default</span>: <span class="string">&quot;&quot;</span> &#125;,</span></span><br><span class="line">  &#125;,</span><br><span class="line"><span class="javascript">  emits: [<span class="string">&quot;input&quot;</span>, <span class="string">&quot;update:modelValue&quot;</span>, <span class="string">&quot;onChange&quot;</span>],</span></span><br><span class="line">  setup(props, context) &#123;</span><br><span class="line"><span class="javascript">    <span class="comment">// 绑定控件的值</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> value = ref(<span class="string">&quot;&quot;</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="comment">// 监听属性，给 value 赋值</span></span></span><br><span class="line">    watch(</span><br><span class="line">      () =&gt; props.modelValue,</span><br><span class="line">      (v1, v2) =&gt; &#123;</span><br><span class="line">        value.value = v1;</span><br><span class="line">      &#125;</span><br><span class="line">    );</span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line">      value,</span><br><span class="line">      props,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    getIconName() &#123;</span><br><span class="line"><span class="javascript">      <span class="keyword">return</span> <span class="string">&quot;iconfont &quot;</span> + <span class="built_in">this</span>.iconName;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    /** 向父组件提交事件更新数据 */</span><br><span class="line">    onInput(e) &#123;</span><br><span class="line"><span class="javascript">      <span class="built_in">this</span>.$emit(<span class="string">&quot;update:modelValue&quot;</span>, e);</span></span><br><span class="line"><span class="javascript">      <span class="built_in">this</span>.$emit(<span class="string">&quot;input&quot;</span>, e);</span></span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">&quot;scss&quot;</span>&gt;</span></span><br><span class="line"><span class="css"><span class="selector-class">.input</span> &#123;</span></span><br><span class="line">  height: 50px;</span><br><span class="line">  text-align: left;</span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="selector-class">.iconfont</span> &#123;</span></span><br><span class="line">    font-size: 22px;</span><br><span class="line"><span class="css">    <span class="selector-tag">color</span>: <span class="selector-id">#127ffc</span>;</span></span><br><span class="line">    display: inline-block;</span><br><span class="line">    margin-right: 14px;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="css"><span class="selector-class">.red-border</span> <span class="selector-class">.el-input__inner</span> &#123;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#ff6666</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="css"><span class="selector-class">.tips</span> &#123;</span></span><br><span class="line">  font-size: 14px;</span><br><span class="line"><span class="css">  <span class="selector-tag">color</span>: <span class="selector-id">#ff6666</span>;</span></span><br><span class="line">  text-align: left;</span><br><span class="line">  margin: 5px auto 20px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="怎么使用封装组件？"><a href="#怎么使用封装组件？" class="headerlink" title="怎么使用封装组件？"></a>怎么使用封装组件？</h2><ul><li><p>引入</p>  <figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> CustomInput <span class="keyword">from</span> <span class="string">&quot;/@/components/CustomInput/index.vue&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> defineComponent(&#123;</span><br><span class="line">  components: &#123; CustomInput &#125;,</span><br><span class="line">...</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li><p>使用</p>  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">...</span><br><span class="line"><span class="tag">&lt;<span class="name">CustomInput</span></span></span><br><span class="line"><span class="tag">            <span class="attr">class</span>=<span class="string">&quot;input-tel&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">v-model</span>=<span class="string">&quot;tel&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">placeholder</span>=<span class="string">&quot;请输入手机号码&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">iconName</span>=<span class="string">&quot;iconshoujihaoma&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">oninput</span>=<span class="string">&quot;`(value = value.replace(/[^\d]/g, &#x27;&#x27;))`&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">:tips</span>=<span class="string">&quot;telTips&quot;</span></span></span><br><span class="line"><span class="tag">            @<span class="attr">onChange</span>=<span class="string">&quot;telTips = &#x27;&#x27;&quot;</span></span></span><br><span class="line"><span class="tag">          &gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">CustomInput</span>&gt;</span></span><br><span class="line">...</span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ol><li>子组件需watch值变化，然后通过emit 事件上抛值，否则子组件value值变化，上层组件还是原来的值</li><li>更改子组件默认样式，需要将style 标签中的scoped 去掉，否则会导致怎么也无法覆盖子组件样式情况</li></ol><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul><li><a href="https://javascript.plainenglish.io/vue-3-v-model-and-components-de2d39527f80">Vue 3 - v-model and Components</a></li><li><a href="https://www.jianshu.com/p/a3c3ba59f812">Vue3组件（三）把别人的组件拿过来再封装一下</a></li><li><a href="https://stackoverflow.com/questions/41133833/how-to-override-scoped-styles-in-vue-components">How to override scoped styles in Vue components?</a></li></ul><hr><blockquote><p>以上: 如发现有问题，欢迎留言指出，我及时更正</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;element-plus 提供了非常多通用的组件，但要满足特定产品需求效果还是略有差异，所以需再次封装。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;概要内容&quot;&gt;&lt;a href=&quot;#概要内容&quot; class=&quot;headerlink&quot; title=&quot;概要内容&quot;&gt;&lt;/a&gt;概要内容&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;怎么封装成子组件？&lt;/li&gt;
&lt;li&gt;怎么使用封装组件？&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Vue3.x + Vite2.x 入门实战" scheme="https://yanxuewen.cn/categories/Vue3-x-Vite2-x-%E5%85%A5%E9%97%A8%E5%AE%9E%E6%88%98/"/>
    
    
    <category term="el-input 封装" scheme="https://yanxuewen.cn/tags/el-input-%E5%B0%81%E8%A3%85/"/>
    
  </entry>
  
  <entry>
    <title>Vue3.x + Vite2.x 入门实战 02：搞懂各种对齐参数</title>
    <link href="https://yanxuewen.cn/2021/04/02/Vue3.x_Vite2.x-02/"/>
    <id>https://yanxuewen.cn/2021/04/02/Vue3.x_Vite2.x-02/</id>
    <published>2021-04-02T04:13:51.069Z</published>
    <updated>2021-05-12T01:43:54.665Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>最常用的text-align、align-item、vertical_align、justify-content 这四个参数容易搞混淆 ，没搞清楚概念经常循环着尝试影响效率 😂，所以动手实践搞清楚一下。</p></blockquote><hr><p><em>提示：只演示2-3种属性值效果，其他去查api即可</em></p><h2 id="概要内容："><a href="#概要内容：" class="headerlink" title="概要内容："></a>概要内容：</h2><ol><li>text-align</li><li>align-item</li><li>vertical_align</li><li>justify-content</li></ol><a id="more"></a><h3 id="1-text-align"><a href="#1-text-align" class="headerlink" title="1. text-align"></a>1. text-align</h3><blockquote><p>作用：针对行内内容，相对父元素的（<strong>横轴</strong>）对齐方式</p></blockquote><ul><li><p>示例：</p>  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>text-align<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.left</span> &#123;</span></span><br><span class="line">            border: 1px solid black;</span><br><span class="line">            text-align: left;</span><br><span class="line">            width: 600px;</span><br><span class="line">            height: 50px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.left</span> <span class="selector-class">.block</span> &#123;</span></span><br><span class="line">            background: red;</span><br><span class="line">            width: 300px;</span><br><span class="line">            display: inline-block;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.center</span> &#123;</span></span><br><span class="line">            border: 1px solid black;</span><br><span class="line">            text-align: center;</span><br><span class="line">            width: 600px;</span><br><span class="line">            height: 50px;</span><br><span class="line">            text-align: center;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.center</span> <span class="selector-class">.block</span> &#123;</span></span><br><span class="line">            background: green;</span><br><span class="line">            width: 300px;</span><br><span class="line">            display: inline-block;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.right</span> &#123;</span></span><br><span class="line">            border: 1px solid black;</span><br><span class="line">            text-align: right;</span><br><span class="line">            width: 600px;</span><br><span class="line">            height: 50px;</span><br><span class="line">            text-align: right;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.right</span> <span class="selector-class">.block</span> &#123;</span></span><br><span class="line">            background: gold;</span><br><span class="line">            width: 300px;</span><br><span class="line">            display: inline-block;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;left&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;block&quot;</span>&gt;</span></span><br><span class="line">            this is a block , text-align: left;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;block&quot;</span>&gt;</span></span><br><span class="line">            this is a block, text-align: center;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;right&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;block&quot;</span>&gt;</span></span><br><span class="line">            this is a block, text-align: right;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>示例效果：</p><p>  <img data-src="https://cdn.jsdelivr.net/gh/yxw007/BlogPicBed@master//img/20210402123233.png" alt=""></p></li></ul><h3 id="2-align-items"><a href="#2-align-items" class="headerlink" title="2. align-items"></a>2. align-items</h3><blockquote><p>作用：定义flex子项在flex容器的当前行的侧轴（<strong>纵轴</strong>）方向上的对齐方式</p></blockquote><ul><li>示例</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>align-items<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#baseline</span> &#123;</span></span><br><span class="line">            width: 220px;</span><br><span class="line">            height: 150px;</span><br><span class="line">            border: 1px solid black;</span><br><span class="line">            display: flex;</span><br><span class="line">            align-items: baseline;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-id">#baseline</span> <span class="selector-tag">div</span> &#123;</span></span><br><span class="line">            flex: 1;</span><br><span class="line">            display: inline-block;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-id">#center</span> &#123;</span></span><br><span class="line">            width: 220px;</span><br><span class="line">            height: 150px;</span><br><span class="line">            border: 1px solid black;</span><br><span class="line">            display: flex;</span><br><span class="line">            align-items: center;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-id">#center</span> <span class="selector-tag">div</span> &#123;</span></span><br><span class="line">            flex: 1;</span><br><span class="line">            display: inline-block;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;baseline&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;background-color:coral;&quot;</span>&gt;</span> align-items<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;background-color:lightblue;&quot;</span>&gt;</span>baseline<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;background-color:coral;&quot;</span>&gt;</span> align-items<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;background-color:lightblue;&quot;</span>&gt;</span>center<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>示例图</p><p>  <img data-src="https://cdn.jsdelivr.net/gh/yxw007/BlogPicBed@master//img/20210402123016.png" alt=""></p></li></ul><h3 id="3-vertical-align"><a href="#3-vertical-align" class="headerlink" title="3. vertical-align"></a>3. vertical-align</h3><blockquote><p>作用：定义行内元素的基线相对于该元素所在行的基线的(<strong>纵轴</strong>)垂直对齐方式</p></blockquote><ul><li><p>示例</p>  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>菜鸟教程(runoob.com)<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        body &#123;</span><br><span class="line">            border: 1px solid black;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.parent</span> <span class="selector-class">.default</span> &#123;</span></span><br><span class="line">            background-color: grey;</span><br><span class="line">            display: inline-block;</span><br><span class="line">            height: 50px;</span><br><span class="line">            margin-bottom: 10px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.parent</span> <span class="selector-class">.top</span> &#123;</span></span><br><span class="line">            background-color: red;</span><br><span class="line">            display: inline-block;</span><br><span class="line">            height: 50px;</span><br><span class="line">            vertical-align: text-top;</span><br><span class="line">            margin-bottom: 10px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.parent</span> <span class="selector-class">.bottom</span> &#123;</span></span><br><span class="line">            background-color: olive;</span><br><span class="line">            display: inline-block;</span><br><span class="line">            height: 50px;</span><br><span class="line">            vertical-align: text-bottom;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;parent&quot;</span>&gt;</span>一个<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;default&quot;</span>&gt;</span>this is a block<span class="tag">&lt;/<span class="name">div</span>&gt;</span>默认对齐的块元素。<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;parent&quot;</span>&gt;</span>一个<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;top&quot;</span>&gt;</span>this is a block<span class="tag">&lt;/<span class="name">div</span>&gt;</span>text-top 对齐的块元素。<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;parent&quot;</span>&gt;</span>一个<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;bottom&quot;</span>&gt;</span>this is a block<span class="tag">&lt;/<span class="name">div</span>&gt;</span>text-bottom 对齐的块元素。<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>示例效果：</p><p>  <img data-src="https://cdn.jsdelivr.net/gh/yxw007/BlogPicBed@master//img/20210402123314.png" alt=""></p></li></ul><h3 id="4-justify-content"><a href="#4-justify-content" class="headerlink" title="4. justify-content"></a>4. justify-content</h3><blockquote><p>作用：用于设置或检索弹性盒子元素在主轴（<strong>横轴</strong>）方向上的对齐方式</p></blockquote><ul><li><p>示例：</p>  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>justify-content<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.center</span> <span class="selector-class">.contian</span> &#123;</span></span><br><span class="line">            width: 400px;</span><br><span class="line">            height: 100px;</span><br><span class="line"><span class="css">            <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#c3c3c3</span>;</span></span><br><span class="line">            display: flex;</span><br><span class="line">            justify-content: center;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.center</span> <span class="selector-class">.contian</span> <span class="selector-tag">div</span> &#123;</span></span><br><span class="line">            width: 70px;</span><br><span class="line">            height: 70px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.flex-start</span> <span class="selector-class">.contian</span> &#123;</span></span><br><span class="line">            width: 400px;</span><br><span class="line">            height: 100px;</span><br><span class="line"><span class="css">            <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#c3c3c3</span>;</span></span><br><span class="line">            display: flex;</span><br><span class="line">            justify-content: flex-start;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.flex-start</span> <span class="selector-class">.contian</span> <span class="selector-tag">div</span> &#123;</span></span><br><span class="line">            width: 70px;</span><br><span class="line">            height: 70px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.space-between</span> <span class="selector-class">.contian</span> &#123;</span></span><br><span class="line">            width: 400px;</span><br><span class="line">            height: 100px;</span><br><span class="line"><span class="css">            <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#c3c3c3</span>;</span></span><br><span class="line">            display: flex;</span><br><span class="line">            justify-content: space-between;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.space-between</span> <span class="selector-class">.contian</span> <span class="selector-tag">div</span> &#123;</span></span><br><span class="line">            width: 70px;</span><br><span class="line">            height: 70px;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>justify-content: center;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;contian&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;background-color:coral;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;background-color:lightblue;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;flex-start&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>flex-start<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;contian&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;background-color:coral;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;background-color:lightblue;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;space-between&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>space-between<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;contian&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;background-color:coral;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;background-color:lightblue;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>示例效果：</p><p>  <img data-src="https://cdn.jsdelivr.net/gh/yxw007/BlogPicBed@master//img/20210402123335.png" alt=""></p></li></ul><hr><blockquote><p>以上: 如发现有问题，欢迎留言指出，我及时更正</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;最常用的text-align、align-item、vertical_align、justify-content 这四个参数容易搞混淆 ，没搞清楚概念经常循环着尝试影响效率 😂，所以动手实践搞清楚一下。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;提示：只演示2-3种属性值效果，其他去查api即可&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;概要内容：&quot;&gt;&lt;a href=&quot;#概要内容：&quot; class=&quot;headerlink&quot; title=&quot;概要内容：&quot;&gt;&lt;/a&gt;概要内容：&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;text-align&lt;/li&gt;
&lt;li&gt;align-item&lt;/li&gt;
&lt;li&gt;vertical_align&lt;/li&gt;
&lt;li&gt;justify-content&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="Vue3.x + Vite2.x 入门实战" scheme="https://yanxuewen.cn/categories/Vue3-x-Vite2-x-%E5%85%A5%E9%97%A8%E5%AE%9E%E6%88%98/"/>
    
    
    <category term="CSS" scheme="https://yanxuewen.cn/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>Vue3.x + Vite2.x 入门实战 01：Vite 遇到的坑</title>
    <link href="https://yanxuewen.cn/2021/04/02/Vue3.x_Vite2.x-01/"/>
    <id>https://yanxuewen.cn/2021/04/02/Vue3.x_Vite2.x-01/</id>
    <published>2021-04-02T04:13:32.182Z</published>
    <updated>2021-05-12T01:43:55.638Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>为了记录自己的成长经历，我决定把自己实战遇到的坑记录起来，一来方便日后查阅，二来给后人提供一份帮助。</p></blockquote><p><em>提示：本篇文章会持续更新，记录Vite相关遇到的坑</em></p><h2 id="环境介绍"><a href="#环境介绍" class="headerlink" title="环境介绍"></a>环境介绍</h2><p>大家都熟知开发环境不同，碰到的问题很有可能也不同。为了不给大家带来困恼（跟你配置完全一样，为啥你的可以我的不可以），介绍下我的开发环境</p><ul><li>Windows 10</li><li>VSCode  1.54.3</li><li>Node.js v12.16.1</li><li>Vue 3.0.5</li><li>Vite 2.0.5</li><li>typescript 4.1.3</li></ul><hr><h2 id="概要内容："><a href="#概要内容：" class="headerlink" title="概要内容："></a>概要内容：</h2><ol><li>配置alias无效</li><li>main.ts中全局引入样式，使用Sass样式变量提示变量未定义</li></ol><hr><a id="more"></a><h2 id="1-配置alias无效"><a href="#1-配置alias无效" class="headerlink" title="1. 配置alias无效"></a>1. 配置alias无效</h2><ul><li>报错如下：<br><img data-src="https://cdn.jsdelivr.net/gh/yxw007/BlogPicBed@master/img/20210328134430.png" alt=""></li></ul><ul><li>解决方法：  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; vite.config.ts 添加alias配置即可</span><br><span class="line"></span><br><span class="line">resolve: &#123;</span><br><span class="line">      alias: [</span><br><span class="line">        &#123;</span><br><span class="line">          find: &#39;&#x2F;@&#39;,</span><br><span class="line">          replacement: path.resolve(__dirname, &#39;.&#x2F;src&#39;)</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="2-main-ts中全局引入样式，使用Sass样式变量提示变量未定义"><a href="#2-main-ts中全局引入样式，使用Sass样式变量提示变量未定义" class="headerlink" title="2. main.ts中全局引入样式，使用Sass样式变量提示变量未定义"></a>2. main.ts中全局引入样式，使用Sass样式变量提示变量未定义</h2><ul><li>报错如下：<br><img data-src="https://cdn.jsdelivr.net/gh/yxw007/BlogPicBed@master/img/20210328134529.png" alt=""></li></ul><ul><li>解决方法：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; vite.config.ts 添加对应sass变量样式文件配置即可</span><br><span class="line"></span><br><span class="line">css: &#123;</span><br><span class="line">      preprocessorOptions: &#123;</span><br><span class="line">        scss: &#123;</span><br><span class="line">          additionalData: &#96;@import &quot;.&#x2F;src&#x2F;assets&#x2F;styles&#x2F;variables&quot;;&#96;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure></li></ul><hr><blockquote><p>以上: 如发现有问题，欢迎留言指出，我及时更正</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;为了记录自己的成长经历，我决定把自己实战遇到的坑记录起来，一来方便日后查阅，二来给后人提供一份帮助。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;提示：本篇文章会持续更新，记录Vite相关遇到的坑&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;环境介绍&quot;&gt;&lt;a href=&quot;#环境介绍&quot; class=&quot;headerlink&quot; title=&quot;环境介绍&quot;&gt;&lt;/a&gt;环境介绍&lt;/h2&gt;&lt;p&gt;大家都熟知开发环境不同，碰到的问题很有可能也不同。为了不给大家带来困恼（跟你配置完全一样，为啥你的可以我的不可以），介绍下我的开发环境&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Windows 10&lt;/li&gt;
&lt;li&gt;VSCode  1.54.3&lt;/li&gt;
&lt;li&gt;Node.js v12.16.1&lt;/li&gt;
&lt;li&gt;Vue 3.0.5&lt;/li&gt;
&lt;li&gt;Vite 2.0.5&lt;/li&gt;
&lt;li&gt;typescript 4.1.3&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&quot;概要内容：&quot;&gt;&lt;a href=&quot;#概要内容：&quot; class=&quot;headerlink&quot; title=&quot;概要内容：&quot;&gt;&lt;/a&gt;概要内容：&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;配置alias无效&lt;/li&gt;
&lt;li&gt;main.ts中全局引入样式，使用Sass样式变量提示变量未定义&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;</summary>
    
    
    
    <category term="Vue3.x + Vite2.x 入门实战" scheme="https://yanxuewen.cn/categories/Vue3-x-Vite2-x-%E5%85%A5%E9%97%A8%E5%AE%9E%E6%88%98/"/>
    
    
    <category term="Vue3.x" scheme="https://yanxuewen.cn/tags/Vue3-x/"/>
    
    <category term="Vite2.x" scheme="https://yanxuewen.cn/tags/Vite2-x/"/>
    
  </entry>
  
  <entry>
    <title>TypeScript 入门1：创建一个在Chrome上运行的TypeScript Demo</title>
    <link href="https://yanxuewen.cn/2021/03/04/TypeScript01/"/>
    <id>https://yanxuewen.cn/2021/03/04/TypeScript01/</id>
    <published>2021-03-04T07:31:53.771Z</published>
    <updated>2021-03-04T07:43:04.159Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><blockquote><p>目前使用TypeScript编写前端项目已成为趋势，所以搞一个运行在Chrome的demo 来方便练习一下TypeScript 相关语法。由于技术更新太快，会导致你在网上参考的例子可能已经过时，或者运行不起来。我的建议还是直接先去看官方文档，尝试这编写demo，实在搞不出来再去Google 查找相关文章。</p></blockquote><h3 id="构建环境"><a href="#构建环境" class="headerlink" title="构建环境"></a>构建环境</h3><ul><li>vscode：1.53.2</li><li>chrome：87.0.42.80.141</li><li>Node.js：12.8.3</li><li>win10</li></ul><a id="more"></a><h3 id="具体步骤"><a href="#具体步骤" class="headerlink" title="具体步骤"></a>具体步骤</h3><ul><li><strong>第一步：创建工程</strong>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;创建目录工程</span><br><span class="line">mkdir typescript_chrom_demo</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;安装typescript 编译环境（推荐：使用pnpm安装，速度贼快）</span><br><span class="line">pnpm install -g typescript</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;初始化工程，会产生tsconfig.json 配置文件</span><br><span class="line">tsc ---init</span><br></pre></td></tr></table></figure></li><li><p><strong>第二步：创建目录和相关文件</strong></p><ul><li>目录结构效果<br><img data-src="https://cdn.jsdelivr.net/gh/aa4790139/BlogPicBed@master//img/20210304153444.png" alt=""></li><li><p>具体内容如下：<br>  <strong>helloworld.html</strong></p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">   &lt;head&gt;</span><br><span class="line">       &lt;title&gt;This is a use TypeScript HTML demo&lt;&#x2F;title&gt;</span><br><span class="line">   &lt;&#x2F;head&gt;</span><br><span class="line">   &lt;body&gt;</span><br><span class="line">   &lt;&#x2F;body&gt;</span><br><span class="line">   &lt;script src&#x3D;&quot;..&#x2F;out&#x2F;helloworld.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>  <strong>helloworld.ts</strong></p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">let message: string &#x3D; &#39;Hello Web, I am is TypeSciprt&#39;;</span><br><span class="line">console.log(message);</span><br><span class="line">document.body.textContent &#x3D; message;</span><br></pre></td></tr></table></figure><p>  <strong>tsconfig.json</strong></p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;compilerOptions&quot;: &#123;</span><br><span class="line">    &quot;target&quot;: &quot;es5&quot;,                           </span><br><span class="line">    &quot;module&quot;: &quot;amd&quot;,                          </span><br><span class="line">    &quot;outFile&quot;: &quot;.&#x2F;out&#x2F;helloworld.js&quot;,         </span><br><span class="line">    &quot;strict&quot;: true,                           </span><br><span class="line">    &quot;esModuleInterop&quot;: true,                   </span><br><span class="line">    &quot;skipLibCheck&quot;: true,                     </span><br><span class="line">    &quot;forceConsistentCasingInFileNames&quot;: true  </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><strong>第三步：创建运行和调试launch.json</strong><br><img data-src="https://cdn.jsdelivr.net/gh/aa4790139/BlogPicBed@master//img/20210304153458.png" alt=""><br><strong>内容如下</strong>：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &#x2F;&#x2F; 使用 IntelliSense 了解相关属性。 </span><br><span class="line">    &#x2F;&#x2F; 悬停以查看现有属性的描述。</span><br><span class="line">    &#x2F;&#x2F; 欲了解更多信息，请访问: https:&#x2F;&#x2F;go.microsoft.com&#x2F;fwlink&#x2F;?linkid&#x3D;830387</span><br><span class="line">    &quot;version&quot;: &quot;0.2.0&quot;,</span><br><span class="line">    &quot;configurations&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;type&quot;: &quot;pwa-chrome&quot;,</span><br><span class="line">            &quot;request&quot;: &quot;launch&quot;,</span><br><span class="line">            &quot;name&quot;: &quot;Open helloworld.html&quot;,</span><br><span class="line">            &quot;file&quot;: &quot;d:\\Work\\h5_workspace\\typescript_chrome_demo\\src\\helloworld.html&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>第四步：打开终端，开启自动编译typescript</strong></p><pre><code><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tsc -w</span><br></pre></td></tr></table></figure>**效果如下**</code></pre></li></ul><ul><li><p><strong>最后：F5启动运行</strong></p><p>  <strong>效果如下</strong><br>  <img data-src="https://cdn.jsdelivr.net/gh/aa4790139/BlogPicBed@master//img/20210304153521.png" alt=""></p></li></ul><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><ul><li><a href="https://code.visualstudio.com/docs/typescript/typescript-tutorial">TypeScript tutorial in Visual Studio Code</a></li><li><a href="https://code.visualstudio.com/docs/editor/debugging#_start-debugging">VSCode Debugging</a></li><li><a href="https://www.tektutorialshub.com/typescript/typescript-compile-on-save-in-visual-studio-code/">TypeScript Compile on Save in Visual Studio Code</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;目前使用TypeScript编写前端项目已成为趋势，所以搞一个运行在Chrome的demo 来方便练习一下TypeScript 相关语法。由于技术更新太快，会导致你在网上参考的例子可能已经过时，或者运行不起来。我的建议还是直接先去看官方文档，尝试这编写demo，实在搞不出来再去Google 查找相关文章。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;构建环境&quot;&gt;&lt;a href=&quot;#构建环境&quot; class=&quot;headerlink&quot; title=&quot;构建环境&quot;&gt;&lt;/a&gt;构建环境&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;vscode：1.53.2&lt;/li&gt;
&lt;li&gt;chrome：87.0.42.80.141&lt;/li&gt;
&lt;li&gt;Node.js：12.8.3&lt;/li&gt;
&lt;li&gt;win10&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="TypeScript 入门" scheme="https://yanxuewen.cn/categories/TypeScript-%E5%85%A5%E9%97%A8/"/>
    
    
    <category term="TypeScript" scheme="https://yanxuewen.cn/tags/TypeScript/"/>
    
    <category term="VSCode" scheme="https://yanxuewen.cn/tags/VSCode/"/>
    
    <category term="Chrom" scheme="https://yanxuewen.cn/tags/Chrom/"/>
    
  </entry>
  
  <entry>
    <title>创建通用JS公共模块并发布至npm</title>
    <link href="https://yanxuewen.cn/2021/03/03/Web04/"/>
    <id>https://yanxuewen.cn/2021/03/03/Web04/</id>
    <published>2021-03-03T06:17:47.932Z</published>
    <updated>2021-03-03T06:57:52.593Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概要内容"><a href="#概要内容" class="headerlink" title="概要内容"></a>概要内容</h3><ul><li>创建：JS公共模块</li><li>打包：使用rollup 打包公共模块</li><li>发布：js公共模块至verdaccio平台</li><li>发布：js公共模块至npm平台</li></ul><a id="more"></a><hr><h3 id="如何创建JS公共模块"><a href="#如何创建JS公共模块" class="headerlink" title="如何创建JS公共模块"></a>如何创建JS公共模块</h3><blockquote><p>由于代码有点多就不贴代码了，直接去代码仓库看吧  <a href="https://github.com/aa4790139/JSCommonUtils">传输门</a></p></blockquote><hr><h3 id="rollup"><a href="#rollup" class="headerlink" title="rollup"></a>rollup</h3><ul><li>简介：<blockquote><p>Rollup 是一个 JavaScript 模块打包器，可以将小块代码编译成大块复杂的代码，例如 library 或应用程序。</p></blockquote></li><li>使用起因：<blockquote><p>公共相关的js文件想弄成单独的一个模块，方便后续开发使用，而不是不停的copy 和paste，所以就去了解怎么样把js公共相关js 打包成一个模块。</p></blockquote></li><li>安装  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pnpm install -g rollup</span><br></pre></td></tr></table></figure></li><li>创建配置文件  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; rollup.config.js</span><br><span class="line">import json from &#39;rollup-plugin-json&#39;;</span><br><span class="line">import babel from &#39;rollup-plugin-babel&#39;;</span><br><span class="line">import &#123;uglify&#125; from &#39;rollup-plugin-uglify&#39;;</span><br><span class="line">import &#123;version&#125; from &#39;..&#x2F;package.json&#39;;</span><br><span class="line">import multiEntry from &quot;rollup-plugin-multi-entry&quot;;</span><br><span class="line">import &#123;terser&#125; from &quot;rollup-plugin-terser&quot;;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">    input: &#39;src&#x2F;*.js&#39;,</span><br><span class="line">    output: &#123;</span><br><span class="line">        &#x2F;*输出公共库路径*&#x2F;</span><br><span class="line">        file: &#39;lib&#x2F;index.js&#39;,</span><br><span class="line">        &#x2F;*配置：UMD 通用定义模块，支持前端端跨平台模块化*&#x2F;</span><br><span class="line">        format: &#39;umd&#39;,</span><br><span class="line">        name: &#39;JSCommonUtils&#39;,</span><br><span class="line">        &#x2F;*压缩和混淆js*&#x2F;</span><br><span class="line">        plugins: [terser(), uglify()],</span><br><span class="line">        &#x2F;*JS前缀: 添加库相关信息*&#x2F;</span><br><span class="line">        banner: &#39;&#x2F;* JSCommonUtils version &#39; + version + &#39; *&#x2F;&#39;,</span><br><span class="line">        &#x2F;*JS尾部: 添加个人相关信息*&#x2F;</span><br><span class="line">        footer: &#39;&#x2F;* follow me on github aa4790139 *&#x2F;&#39;</span><br><span class="line">    &#125;,</span><br><span class="line">    plugins: [</span><br><span class="line">        json(),</span><br><span class="line">        babel(&#123;</span><br><span class="line">            &#x2F;*过滤node_modules编译*&#x2F;</span><br><span class="line">            exclude: &#39;node_modules&#x2F;**&#39;</span><br><span class="line">        &#125;),</span><br><span class="line">        &#x2F;*允许多输入源*&#x2F;</span><br><span class="line">        multiEntry()</span><br><span class="line">    ],</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><hr><h3 id="verdaccio"><a href="#verdaccio" class="headerlink" title="verdaccio"></a>verdaccio</h3><ul><li>简介： 开源轻量的npm私服包管理平台</li><li>使用起因：<blockquote><p>创建好自己的js公共模块时，我们需要在浏览器和Node.js 环境中测试，有了verdaccio 就非常方便我们测试了。而不是去不停npm本地公共模块搞得非常蛋疼，而且很容易出问题，所以为了简单和方便我们使用verdaccio 搞个私有仓库，方便我们模拟安装使用。</p></blockquote></li><li>安装   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pnpm install -g verdaccio</span><br></pre></td></tr></table></figure></li><li>启动  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">verdaccio</span><br></pre></td></tr></table></figure></li></ul><h3 id="发布至verdaccio平台"><a href="#发布至verdaccio平台" class="headerlink" title="发布至verdaccio平台"></a>发布至verdaccio平台</h3><ul><li>常用命令<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;1. 添加用户</span><br><span class="line">npm adduser --registry http:&#x2F;&#x2F;localhost:4873</span><br><span class="line">&#x2F;&#x2F;2. 发布至私有仓库位置</span><br><span class="line">npm publish --registry http:&#x2F;&#x2F;localhost:4873</span><br><span class="line">&#x2F;&#x2F; 撤回发布刚发布包</span><br><span class="line">npm unpublish --force --registry http:&#x2F;&#x2F;localhost:4873 </span><br><span class="line">&#x2F;&#x2F; 撤回发布的指定包</span><br><span class="line">npm unpublish package_name  --force --registry http:&#x2F;&#x2F;localhost:4873</span><br></pre></td></tr></table></figure></li><li>效果图<br><img data-src="https://cdn.jsdelivr.net/gh/aa4790139/BlogPicBed@master//img/20210303144737.png" alt=""></li></ul><h3 id="发布至npm平台"><a href="#发布至npm平台" class="headerlink" title="发布至npm平台"></a>发布至npm平台</h3><ul><li><p>创建.npmignore 文件，过滤掉无需上传的文件和目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">node_modules&#x2F;*</span><br><span class="line">src&#x2F;</span><br><span class="line">build&#x2F;</span><br><span class="line">.babelrc</span><br><span class="line">.gitignore</span><br><span class="line">package-lock.json</span><br><span class="line">pnpm-lock.yaml</span><br><span class="line">!node_modules&#x2F;crc32</span><br><span class="line">!node_modules&#x2F;deflate-js</span><br></pre></td></tr></table></figure><blockquote><p>提示: .npmignore文件内容，需要忽略的文件和目录写前面，需要排除忽略的文件或目录前加!写后面</p></blockquote></li><li><p>效果图<br><img data-src="https://cdn.jsdelivr.net/gh/aa4790139/BlogPicBed@master//img/20210303144716.png" alt=""></p></li></ul><hr><h4 id="参考文献："><a href="#参考文献：" class="headerlink" title="参考文献："></a>参考文献：</h4><ul><li><a href="https://verdaccio.org/docs/en/installation">verdaccio 官网</a></li><li><a href="https://fe.rualc.com/note/npm-verdaccio.html#npm-install">verdaccio 搭建配置</a></li><li><a href="https://www.rollupjs.com/guide/tools">rollup.js 中文文档</a></li><li><a href="https://github.com/Godiswill/blog/issues/6">rollup 官网打包实践</a></li><li><a href="https://chenshenhai.github.io/rollupjs-note/">Rollup.js 实战学习笔记</a></li><li><a href="https://stackoverflow.com/questions/48092647/npmignore-ignore-whole-folder-except-given-file-types">.npmignore: ignore whole folder except given file types</a></li></ul><hr><blockquote><p>以上: 如发现有问题，欢迎留言指出，我及时更正</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;概要内容&quot;&gt;&lt;a href=&quot;#概要内容&quot; class=&quot;headerlink&quot; title=&quot;概要内容&quot;&gt;&lt;/a&gt;概要内容&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;创建：JS公共模块&lt;/li&gt;
&lt;li&gt;打包：使用rollup 打包公共模块&lt;/li&gt;
&lt;li&gt;发布：js公共模块至verdaccio平台&lt;/li&gt;
&lt;li&gt;发布：js公共模块至npm平台&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="模块化" scheme="https://yanxuewen.cn/categories/%E6%A8%A1%E5%9D%97%E5%8C%96/"/>
    
    
    <category term="UMD" scheme="https://yanxuewen.cn/tags/UMD/"/>
    
    <category term="rollup" scheme="https://yanxuewen.cn/tags/rollup/"/>
    
    <category term="verdaccio" scheme="https://yanxuewen.cn/tags/verdaccio/"/>
    
    <category term="npm" scheme="https://yanxuewen.cn/tags/npm/"/>
    
  </entry>
  
  <entry>
    <title>算法与数据结构-梳理汇总</title>
    <link href="https://yanxuewen.cn/2021/02/17/Algorithm-DataStruct01/"/>
    <id>https://yanxuewen.cn/2021/02/17/Algorithm-DataStruct01/</id>
    <published>2021-02-17T08:13:35.556Z</published>
    <updated>2021-04-02T04:13:32.181Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概要内容"><a href="#概要内容" class="headerlink" title="概要内容"></a>概要内容</h3><ul><li>算法与数据结构，重学起因</li><li>算法与数据结构-梳理汇总导图</li><li>学习心得</li></ul><h3 id="算法与数据结构，重学起因"><a href="#算法与数据结构，重学起因" class="headerlink" title="算法与数据结构，重学起因"></a>算法与数据结构，重学起因</h3><blockquote><p>起因：虽然在大学期间学习过算法，刚开始学习基础排序算法、基础数据结构还好，但到后面学习、快速排序、二分查找、双向链表、循环链表、各种树等，就开始顶不住了，觉得太复杂、太难就学不动了，导致学得挺差，现在也基本忘得差不多了。前端时间看到昊神分享的一篇算法学习文章，就接触到了波波老师的文章，提到算法也没有传说中的难，说得挺简单的，然后我就跑到慕课网找到了波波老师的课程【<a href="https://class.imooc.com/sc/105/learn">算法与数据结构体系课：覆盖0~5年工作面试所需</a>】，原价：￥1199 折后：￥999，贵竟然好评率100%。心想：投资自己是最好的投资，就狠心放次血吧~ </p></blockquote><a id="more"></a><h3 id="算法与数据结构-梳理汇总导图"><a href="#算法与数据结构-梳理汇总导图" class="headerlink" title="算法与数据结构-梳理汇总导图"></a>算法与数据结构-梳理汇总导图</h3><p><img data-src="https://cdn.jsdelivr.net/gh/aa4790139/BlogPicBed@master/img/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84&amp;%E7%AE%97%E6%B3%95.png" alt=""></p><h3 id="学习心得"><a href="#学习心得" class="headerlink" title="学习心得"></a>学习心得</h3><ol><li>学习一个知识：需消化成自己理解后的样子，然后再输出出来</li><li>学习一个知识：使用思维导图绘成一幅图。一来：让自己非常直观的看到知识点间的关系，二来：方便知识点的记忆，三来：未来根据图快速全面的回顾知识点。</li></ol><h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h3><blockquote><p>感谢波波老师出的这干货课程，讲得通俗易懂，让我收获满满。好东西，推荐大家购买学习~</p></blockquote><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><ul><li><a href="https://class.imooc.com/sc/105/learn">算法与数据结构体系课：覆盖0~5年工作面试所需</a></li><li><a href="https://www.jianshu.com/p/d5dd618014f0">各种树的复杂度</a></li><li><a href="https://zhuanlan.zhihu.com/p/136183284">BFS 的使用场景：层序遍历、最短路径问题</a></li><li><a href="https://blog.csdn.net/Hairy_Monsters/article/details/80154391">十种常见排序算法的思想、应用场景、C++代码实现及时间效率直观对比</a></li><li><a href="https://www.cnblogs.com/onepixel/p/7674659.html">十大经典排序算法（动图演示）</a></li><li><a href="https://www.cnblogs.com/QG-whz/p/5194627.html">数据结构图文解析系列</a></li></ul><hr><blockquote><p>以上: 如发现有问题，欢迎留言指出，我及时更正</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;概要内容&quot;&gt;&lt;a href=&quot;#概要内容&quot; class=&quot;headerlink&quot; title=&quot;概要内容&quot;&gt;&lt;/a&gt;概要内容&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;算法与数据结构，重学起因&lt;/li&gt;
&lt;li&gt;算法与数据结构-梳理汇总导图&lt;/li&gt;
&lt;li&gt;学习心得&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;算法与数据结构，重学起因&quot;&gt;&lt;a href=&quot;#算法与数据结构，重学起因&quot; class=&quot;headerlink&quot; title=&quot;算法与数据结构，重学起因&quot;&gt;&lt;/a&gt;算法与数据结构，重学起因&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;起因：虽然在大学期间学习过算法，刚开始学习基础排序算法、基础数据结构还好，但到后面学习、快速排序、二分查找、双向链表、循环链表、各种树等，就开始顶不住了，觉得太复杂、太难就学不动了，导致学得挺差，现在也基本忘得差不多了。前端时间看到昊神分享的一篇算法学习文章，就接触到了波波老师的文章，提到算法也没有传说中的难，说得挺简单的，然后我就跑到慕课网找到了波波老师的课程【&lt;a href=&quot;https://class.imooc.com/sc/105/learn&quot;&gt;算法与数据结构体系课：覆盖0~5年工作面试所需&lt;/a&gt;】，原价：￥1199 折后：￥999，贵竟然好评率100%。心想：投资自己是最好的投资，就狠心放次血吧~ &lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="算法与数据结构" scheme="https://yanxuewen.cn/categories/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
    <category term="常用排序" scheme="https://yanxuewen.cn/tags/%E5%B8%B8%E7%94%A8%E6%8E%92%E5%BA%8F/"/>
    
    <category term="常用数据结构" scheme="https://yanxuewen.cn/tags/%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>Web性能优化</title>
    <link href="https://yanxuewen.cn/2021/02/05/Web03/"/>
    <id>https://yanxuewen.cn/2021/02/05/Web03/</id>
    <published>2021-02-05T09:08:17.735Z</published>
    <updated>2021-02-17T08:13:35.583Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概要内容"><a href="#概要内容" class="headerlink" title="概要内容"></a>概要内容</h3><ul><li>工具层面</li><li>Vue代码层面</li><li>Webpack层面</li><li>Web技术层面</li></ul><blockquote><p>性能优化对于每一个工程师都是必定要面对的问题，相信大部分人平常发现什么点可以优化，就优化什么样的点，没有全面仔细梳理汇总过知识点，导致别人问我们也不能很全面的回答上来，可能当时只能回答想到的一些零碎的点，这样给人的印象就很不好，所以我查阅相关资料，以及自己的一些经验汇总出如下脑图，方面日后别人问起时，我们脑子里面能快速呈现一幅图，然后把关联知识都说出来。</p></blockquote><a id="more"></a><p><img data-src="https://cdn.jsdelivr.net/gh/aa4790139/BlogPicBed@master/img/Web%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96.jpg" alt=""></p><h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h3><blockquote><p>如果你发现有我没有列出来的优化点，欢迎给我留言，我再更新这个导图</p></blockquote><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><ul><li><a href="https://juejin.cn/post/6844903913410314247#heading-22">Vue 项目性能优化 — 实践指南（网上最全 / 详细）</a></li><li><a href="https://yanxuewen.cn/2020/12/30/WebBuild01/#more">Web构建优化</a></li></ul><hr><blockquote><p>以上: 如发现有问题，欢迎留言指出，我及时更正</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;概要内容&quot;&gt;&lt;a href=&quot;#概要内容&quot; class=&quot;headerlink&quot; title=&quot;概要内容&quot;&gt;&lt;/a&gt;概要内容&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;工具层面&lt;/li&gt;
&lt;li&gt;Vue代码层面&lt;/li&gt;
&lt;li&gt;Webpack层面&lt;/li&gt;
&lt;li&gt;Web技术层面&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;性能优化对于每一个工程师都是必定要面对的问题，相信大部分人平常发现什么点可以优化，就优化什么样的点，没有全面仔细梳理汇总过知识点，导致别人问我们也不能很全面的回答上来，可能当时只能回答想到的一些零碎的点，这样给人的印象就很不好，所以我查阅相关资料，以及自己的一些经验汇总出如下脑图，方面日后别人问起时，我们脑子里面能快速呈现一幅图，然后把关联知识都说出来。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="性能优化" scheme="https://yanxuewen.cn/categories/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/"/>
    
    
    <category term="Vue" scheme="https://yanxuewen.cn/tags/Vue/"/>
    
    <category term="WebPack" scheme="https://yanxuewen.cn/tags/WebPack/"/>
    
  </entry>
  
  <entry>
    <title>CORS-跨域实战</title>
    <link href="https://yanxuewen.cn/2021/01/26/JS03/"/>
    <id>https://yanxuewen.cn/2021/01/26/JS03/</id>
    <published>2021-01-26T09:51:38.671Z</published>
    <updated>2021-01-26T13:27:07.082Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概要内容"><a href="#概要内容" class="headerlink" title="概要内容"></a>概要内容</h3><ul><li>前端需要做什么?</li><li>后端需要怎么配置?</li></ul><blockquote><p>由于浏览器的同源安全策略，作为前端开发你使用API调用接口必定会碰到跨域问题，网上太多的文章，大部分都是讲得不太清楚，让你看得特别懵逼，让你可能会做出以下愚蠢行为：跨域配置写到前端的header中、Nginx 跨域配置到Web节点中、瞎填Access-Control-Allow-Headers中的值等等，会导致怎么配置都不对，令你自己发狂。经验提醒：不要急着瞎改瞎试，看完理论相关文章后再尝试，然后静下心来思考流程是怎么运转的，用这样的方式很快就会配对了。以下是我成功跨域配置，希望给你提供一点帮助。</p></blockquote><a id="more"></a><hr><h3 id="前端需要做什么"><a href="#前端需要做什么" class="headerlink" title="前端需要做什么?"></a>前端需要做什么?</h3><blockquote><p>请求时使用到的header字段梳理并告知后端<br><img data-src="https://cdn.jsdelivr.net/gh/aa4790139/BlogPicBed@master//img/20210126175710.png" alt=""></p></blockquote><hr><h3 id="后端需要怎么配置"><a href="#后端需要怎么配置" class="headerlink" title="后端需要怎么配置?"></a>后端需要怎么配置?</h3><h4 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h4><blockquote><p>注意：针对API 服务配置跨域，而不是Web服务</p><ul><li>疑问1：为啥要配置nginx,因为请求需要转换，所以需要配置</li><li>注意：Access-Control-Allow-Origin <em>，必须加在Nginx层，否则请求不会转换至api server 层，所以api server 层的Access-Control-Allow-Origin </em> 可以去掉，否则会报：<br><img data-src="https://cdn.jsdelivr.net/gh/aa4790139/BlogPicBed@master//img/20210126211841.png" alt=""></li></ul></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">location &#x2F;secret-http-api&#x2F; &#123;</span><br><span class="line">            proxy_pass http:&#x2F;&#x2F;127.0.0.1:3001&#x2F;;</span><br><span class="line">            proxy_read_timeout 240s;</span><br><span class="line">            add_header Access-Control-Allow-Origin *;</span><br><span class="line">            add_header Access-Control-Allow-Methods &#39;GET, POST, OPTIONS&#39;;</span><br><span class="line">            add_header Access-Control-Allow-Headers &#39;Content-Type,Authorization,Content-Encoding,Accept-Encoding&#39;;</span><br><span class="line">            if ($request_method &#x3D; &#39;OPTIONS&#39;) &#123;</span><br><span class="line">                return 204;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><hr><h4 id="API-Server-Nodejs"><a href="#API-Server-Nodejs" class="headerlink" title="API Server (Nodejs)"></a>API Server (Nodejs)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">        app.use(function (req, res, next) &#123;</span><br><span class="line">    if (req.path !&#x3D;&#x3D; &#39;&#x2F;&#39; &amp;&amp; !req.path.includes(&#39;.&#39;)) &#123;</span><br><span class="line">        res.set(&#123;</span><br><span class="line">            &#x2F;* 允许后端发送cookie*&#x2F;</span><br><span class="line">            &#x2F;&#x2F; &#39;Access-Control-Allow-Credentials&#39;: true,</span><br><span class="line">            &#x2F;*任意域名都可以访问,或者基于我请求头里面的域*&#x2F;</span><br><span class="line">            &#x2F;&#x2F; &#39;Access-Control-Allow-Origin&#39;: &#39;*&#39;,</span><br><span class="line">            &#x2F;*允许请求头字段*&#x2F;</span><br><span class="line">            &#x2F;&#x2F; &#39;Access-Control-Allow-Headers&#39;: &#39;Accept,Content-Encoding,Content-Type,Accept-Encoding&#39;,</span><br><span class="line">            &#x2F;*允许请求方式*&#x2F;</span><br><span class="line">            &#39;Access-Control-Allow-Methods&#39;: &#39;POST,GET,OPTIONS&#39;,</span><br><span class="line">            &#x2F;*预检成功后相同请求无需预检的有效时间(单位：秒)*&#x2F;</span><br><span class="line">            &#39;Access-Control-Max-Age&#39;: 3600,</span><br><span class="line">            &#x2F;*默认与允许的文本格式json和编码格式*&#x2F;</span><br><span class="line">            &#39;Content-Type&#39;: &#39;text&#x2F;plain; charset&#x3D;utf-8&#39;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    req.method &#x3D;&#x3D;&#x3D; &#39;OPTIONS&#39; ? res.status(204).end() : next()</span><br><span class="line">&#125;);     </span><br></pre></td></tr></table></figure><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><ul><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Access_control_CORS#%E4%BB%80%E4%B9%88%E6%83%85%E5%86%B5%E4%B8%8B%E9%9C%80%E8%A6%81_cors_%EF%BC%9F">跨源资源共享</a></li><li><a href="https://segmentfault.com/a/1190000022512695">Node设置cors,后端解决跨域问题</a></li><li><a href="https://segmentfault.com/a/1190000009971254">cors跨域之简单请求与预检请求（发送请求头带令牌token）</a></li><li><a href="https://blog.yiguochen.com/options-cors.html">OPTIONS 方法在跨域请求（CORS）中的应用</a></li><li><a href="https://segmentfault.com/a/1190000012550346">Nginx配置跨域请求 Access-Control-Allow-Origin *</a></li></ul><blockquote><p>以上: 如发现有问题，欢迎留言指出，我及时更正</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;概要内容&quot;&gt;&lt;a href=&quot;#概要内容&quot; class=&quot;headerlink&quot; title=&quot;概要内容&quot;&gt;&lt;/a&gt;概要内容&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;前端需要做什么?&lt;/li&gt;
&lt;li&gt;后端需要怎么配置?&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;由于浏览器的同源安全策略，作为前端开发你使用API调用接口必定会碰到跨域问题，网上太多的文章，大部分都是讲得不太清楚，让你看得特别懵逼，让你可能会做出以下愚蠢行为：跨域配置写到前端的header中、Nginx 跨域配置到Web节点中、瞎填Access-Control-Allow-Headers中的值等等，会导致怎么配置都不对，令你自己发狂。经验提醒：不要急着瞎改瞎试，看完理论相关文章后再尝试，然后静下心来思考流程是怎么运转的，用这样的方式很快就会配对了。以下是我成功跨域配置，希望给你提供一点帮助。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="部署" scheme="https://yanxuewen.cn/categories/%E9%83%A8%E7%BD%B2/"/>
    
    
    <category term="Web" scheme="https://yanxuewen.cn/tags/Web/"/>
    
    <category term="Vue.js" scheme="https://yanxuewen.cn/tags/Vue-js/"/>
    
    <category term="Node.js" scheme="https://yanxuewen.cn/tags/Node-js/"/>
    
    <category term="Express" scheme="https://yanxuewen.cn/tags/Express/"/>
    
  </entry>
  
  <entry>
    <title>Web构建优化</title>
    <link href="https://yanxuewen.cn/2020/12/30/WebBuild01/"/>
    <id>https://yanxuewen.cn/2020/12/30/WebBuild01/</id>
    <published>2020-12-30T05:05:31.688Z</published>
    <updated>2021-02-17T08:13:35.591Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概要内容"><a href="#概要内容" class="headerlink" title="概要内容"></a>概要内容</h3><ul><li>DllPlugin 和 DllReferencePlugin 简介</li><li>如何使用DllPlugin打包，及DllReferencePlugin如何引用dll</li><li>构建优化效果</li><li>SplitChunks </li><li>Demo源码工程</li></ul><a id="more"></a><hr><h3 id="DllPlugin-和-DllReferencePlugin-简介"><a href="#DllPlugin-和-DllReferencePlugin-简介" class="headerlink" title="DllPlugin 和 DllReferencePlugin 简介"></a>DllPlugin 和 DllReferencePlugin 简介</h3><ul><li>DllPlugin: <blockquote><p>这个插件是在一个额外的独立的 webpack 设置中创建一个只有 dll 的 bundle(dll-only-bundle)。 这个插件会生成一个名为 manifest.json 的文件，这个文件是用来让 DLLReferencePlugin 映射到相关的依赖上去的。</p></blockquote></li><li>DllReferencePlugin:<blockquote><p>此插件配置在 webpack 的主配置文件中，此插件会把 dll-only-bundles 引用到需要的预编译的依赖中</p></blockquote></li><li>通俗点讲：<blockquote><p>DllPlugin 插件负责把第三方公共库，打包进一个独立的dll库中。最后项目打包时DllReferencePlugin 通过manifest.json 来引用dll的公共库，避免项目每次构建时都将第三库和业务代码进行重复打包。</p></blockquote></li><li>优点：<ul><li>提升打包构建速度</li><li>公共js文件配置CDN，避免掉重复下载公共库js文件</li></ul></li></ul><hr><h3 id="如何使用DllPlugin打包，及DllReferencePlugin如何引用dll"><a href="#如何使用DllPlugin打包，及DllReferencePlugin如何引用dll" class="headerlink" title="如何使用DllPlugin打包，及DllReferencePlugin如何引用dll"></a>如何使用DllPlugin打包，及DllReferencePlugin如何引用dll</h3><ul><li>DllPlugin 配置需要打包第三方库至dll中</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;webpack.dll.config.js</span><br><span class="line"></span><br><span class="line">const DllPlugin &#x3D; require(&#39;webpack&#x2F;lib&#x2F;DllPlugin&#39;);</span><br><span class="line">const path &#x3D; require(&#39;path&#39;)</span><br><span class="line">const fs &#x3D; require(&#39;fs&#39;);</span><br><span class="line"></span><br><span class="line">var packageJsonContent &#x3D; fs.readFileSync(path.resolve(__dirname, &#39;..&#x2F;package.json&#39;));</span><br><span class="line">var packageJson &#x3D; JSON.parse(packageJsonContent);</span><br><span class="line"></span><br><span class="line">var dependencies &#x3D; Object.keys(packageJson.dependencies);</span><br><span class="line"></span><br><span class="line">module.exports &#x3D; &#123;</span><br><span class="line">    entry: &#123;</span><br><span class="line">        vendor: dependencies</span><br><span class="line">    &#125;,</span><br><span class="line">    output: &#123;</span><br><span class="line">        path: path.resolve(__dirname, &#39;..&#x2F;dist&#39;),</span><br><span class="line">        filename: &#39;vendor.bundle.js&#39;,</span><br><span class="line">        library: &#39;vendor_lib&#39;</span><br><span class="line">    &#125;,</span><br><span class="line">    plugins: [</span><br><span class="line">        new DllPlugin(&#123;</span><br><span class="line">            context: __dirname,</span><br><span class="line">            name: &#39;vendor_lib&#39;,</span><br><span class="line">            &#x2F;* 生成manifest文件输出的位置和文件名称 *&#x2F;</span><br><span class="line">            path: path.resolve(__dirname, &#39;..&#x2F;dist&#x2F;vendor-manifest.json&#39;)</span><br><span class="line">        &#125;)</span><br><span class="line">    ],</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>DllReferencePlugin如何引用dll</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;webpack.config.js 中 plugins添加以下代码</span><br><span class="line"></span><br><span class="line">new DllReferencePlugin(&#123;</span><br><span class="line">            manifest: require(path.resolve(__dirname, &#39;..&#x2F;dist&#x2F;vendor-manifest.json&#39;))</span><br><span class="line">&#125;),</span><br></pre></td></tr></table></figure><hr><h3 id="构建优化效果"><a href="#构建优化效果" class="headerlink" title="构建优化效果"></a>构建优化效果</h3><blockquote><p>简单demo，未抽离公共库打包时间7572ms，抽离公共库打包时间2315ms，打包速度快2倍多<br><img data-src="https://cdn.jsdelivr.net/gh/aa4790139/BlogPicBed@master//img/20201230131323.png" alt=""></p></blockquote><hr><h3 id="SplitChunks"><a href="#SplitChunks" class="headerlink" title="SplitChunks"></a>SplitChunks</h3><ul><li>简介：Webpack中一个提取或分离代码的插件，主要作用是提取公共代码，防止代码被重复打包，拆分过大的js文件，合并零散的js文件，可配置</li><li>配置：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;webpack.dll.config.js中optimization 中新增如下配置</span><br><span class="line">splitChunks: &#123;</span><br><span class="line">            chunks: &quot;async&quot;,</span><br><span class="line">            minSize: 30000,</span><br><span class="line">            minChunks: 1,</span><br><span class="line">            maxAsyncRequests: 5,</span><br><span class="line">            maxInitialRequests: 3,</span><br><span class="line">            automaticNameDelimiter: &#39;~&#39;,</span><br><span class="line">            name: true,</span><br><span class="line">            cacheGroups: &#123;</span><br><span class="line">                vendors: &#123;</span><br><span class="line">                    test: &#x2F;[\\&#x2F;]node_modules[\\&#x2F;]&#x2F;,</span><br><span class="line">                    priority: -10</span><br><span class="line">                &#125;,</span><br><span class="line">                default: &#123;</span><br><span class="line">                    minChunks: 2,</span><br><span class="line">                    priority: -20,</span><br><span class="line">                    reuseExistingChunk: true</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><hr><h3 id="Demo源码工程"><a href="#Demo源码工程" class="headerlink" title="Demo源码工程"></a>Demo源码工程</h3><ul><li>访问地址：<a href="https://github.com/aa4790139/webpack4_confuse_demo">https://github.com/aa4790139/webpack4_confuse_demo</a></li></ul><hr><h3 id="最后："><a href="#最后：" class="headerlink" title="最后："></a>最后：</h3><blockquote><p>由于对于公共库抽离和分割包过大优化打包，我只是试探性的去了解和测试。如果你还有什么更好的优化构建方法或者建议，欢迎给我留言。感谢~</p></blockquote><hr><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><ul><li><a href="https://www.cnblogs.com/tugenhua0707/p/9520780.html">深入浅出的webpack构建工具—-DllPlugin DllReferencePlugin提高构建速度(七)</a></li><li><a href="https://webpack.docschina.org/plugins/split-chunks-plugin/#optimizationsplitchunks">SplitChunksPlugin 使用说明</a></li><li><a href="https://zhuanlan.zhihu.com/p/152097785">Webpack之SplitChunks插件用法详解</a></li><li><a href="https://imweb.io/topic/5b66dd601402769b60847149">webpack 4 Code Splitting 的 splitChunks 配置探索</a></li></ul><blockquote><p>以上: 如发现有问题，欢迎留言指出，我及时更正</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;概要内容&quot;&gt;&lt;a href=&quot;#概要内容&quot; class=&quot;headerlink&quot; title=&quot;概要内容&quot;&gt;&lt;/a&gt;概要内容&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;DllPlugin 和 DllReferencePlugin 简介&lt;/li&gt;
&lt;li&gt;如何使用DllPlugin打包，及DllReferencePlugin如何引用dll&lt;/li&gt;
&lt;li&gt;构建优化效果&lt;/li&gt;
&lt;li&gt;SplitChunks &lt;/li&gt;
&lt;li&gt;Demo源码工程&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="webpack" scheme="https://yanxuewen.cn/categories/webpack/"/>
    
    
    <category term="DllPlugin" scheme="https://yanxuewen.cn/tags/DllPlugin/"/>
    
    <category term="DllReferencePlugin" scheme="https://yanxuewen.cn/tags/DllReferencePlugin/"/>
    
    <category term="打包优化" scheme="https://yanxuewen.cn/tags/%E6%89%93%E5%8C%85%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>Web代码混淆</title>
    <link href="https://yanxuewen.cn/2020/12/29/Web02/"/>
    <id>https://yanxuewen.cn/2020/12/29/Web02/</id>
    <published>2020-12-29T04:57:17.325Z</published>
    <updated>2020-12-30T06:27:13.234Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概要内容"><a href="#概要内容" class="headerlink" title="概要内容"></a>概要内容</h3><ul><li>代码混淆</li><li>环境准备</li><li>如何配置UglifyJsPlugin混淆参数</li><li>混淆效果</li><li>Demo源码工程</li></ul><a id="more"></a><h3 id="代码混淆"><a href="#代码混淆" class="headerlink" title="代码混淆"></a>代码混淆</h3><ul><li><p>定义：代码混淆(Obfuscated code)亦称花指令，是将计算机程序的代码，转换成一种功能上等价，但是难于阅读和理解的形式的行为。通俗一点讲就是你写的代码，通过混淆工具，把你的源代码混淆得别人看不太懂。</p></li><li><p>起因：由于Web可以用浏览器调试工具，直接查看到我们的源代码，如果我们的源代码中包含了敏感信息(比如：加密密钥、服务器内部接口地址等)，那么对于不怀好意的人，就可能拿着这些东西攻击我们的服务器，所以我们需要把我们的代码去掉注释、混淆代码等，这样别人就没那么容易看懂我们的代码了，提高服务被攻击的门槛。</p></li></ul><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><blockquote><p>由于我尝试使用WebPack3.x的版本，利用UglifyJsPlugin版本来混淆打包，发现各种配置问题，然后导致打包出问题，所以推荐WebPack4.x 以上版本。我的环境如下</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">dependencies&quot;: &#123;</span><br><span class="line">&quot;vue&quot;: &quot;^2.6.11&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&quot;devDependencies&quot;: &#123;</span><br><span class="line">    &quot;@babel&#x2F;cli&quot;: &quot;^7.8.4&quot;,</span><br><span class="line">    &quot;@babel&#x2F;core&quot;: &quot;^7.8.7&quot;,</span><br><span class="line">    &quot;@babel&#x2F;preset-env&quot;: &quot;^7.8.7&quot;,</span><br><span class="line">    &quot;babel-loader&quot;: &quot;^8.0.6&quot;,</span><br><span class="line">    &quot;clean-webpack-plugin&quot;: &quot;^3.0.0&quot;,</span><br><span class="line">    &quot;css-loader&quot;: &quot;^3.4.2&quot;,</span><br><span class="line">    &quot;html-loader&quot;: &quot;^1.3.2&quot;,</span><br><span class="line">    &quot;html-webpack-plugin&quot;: &quot;^3.2.0&quot;,</span><br><span class="line">    &quot;uglifyjs-webpack-plugin&quot;: &quot;^2.2.0&quot;,</span><br><span class="line">    &quot;url-loader&quot;: &quot;^4.1.1&quot;,</span><br><span class="line">    &quot;vue-loader&quot;: &quot;^15.9.0&quot;,</span><br><span class="line">    &quot;vue-style-loader&quot;: &quot;^4.1.2&quot;,</span><br><span class="line">    &quot;vue-template-compiler&quot;: &quot;^2.6.11&quot;,</span><br><span class="line">    &quot;webpack&quot;: &quot;^4.42.0&quot;,</span><br><span class="line">    &quot;webpack-bundle-analyzer&quot;: &quot;^4.3.0&quot;,</span><br><span class="line">    &quot;webpack-cli&quot;: &quot;^3.3.11&quot;,</span><br><span class="line">    &quot;webpack-dev-server&quot;: &quot;^3.10.3&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="如何配置UglifyJsPlugin混淆参数"><a href="#如何配置UglifyJsPlugin混淆参数" class="headerlink" title="如何配置UglifyJsPlugin混淆参数"></a>如何配置UglifyJsPlugin混淆参数</h3><blockquote><p>由于混淆需指定混淆哪些代码，不能把JS提供的API、第三方库的API相关的代码也给混淆掉，所以需要在写代码时一定要养成养好的编码规范，这样在配置混淆正在表达式时就非常好些了。以下介绍我的2种命令规范，所以下面的混淆正则表达式就非常好写。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">m_xxx : 成员变量</span><br><span class="line">__function : 方法名</span><br></pre></td></tr></table></figure></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">new UglifyJsPlugin(</span><br><span class="line">&#123;</span><br><span class="line">    uglifyOptions: &#123;</span><br><span class="line">        compress: &#123;</span><br><span class="line">            &#x2F;&#x2F; warnings: false,</span><br><span class="line">            &#x2F;* 移除没被引用的代码 *&#x2F;</span><br><span class="line">            dead_code: true,</span><br><span class="line">            &#x2F;* 当 Function(args, code)的args 和 code都是字符串时，压缩并混淆 *&#x2F;</span><br><span class="line">            &#x2F;&#x2F; unsafe_Func: true,</span><br><span class="line">            &#x2F;* 干掉没有被引用的函数和变量 *&#x2F;</span><br><span class="line">            unused: true,</span><br><span class="line">            &#x2F;* 干掉顶层作用域中没有被引用的函数或变量 *&#x2F;</span><br><span class="line">            toplevel: true,</span><br><span class="line">            &#x2F;* 干掉console.*函数 *&#x2F;</span><br><span class="line">            drop_console: true,</span><br><span class="line">            &#x2F;* 干掉Debugger*&#x2F;</span><br><span class="line">            drop_debugger: true,</span><br><span class="line">            &#x2F;* 压缩代码次数 注意：数字越大压缩耗时越长 *&#x2F;</span><br><span class="line">            passes: 1,</span><br><span class="line">            &#x2F;* 传true以防止压缩时把1&#x2F;0转成Infinity，那可能会在chrome上有性能问题 *&#x2F;</span><br><span class="line">            keep_infinity: true</span><br><span class="line">        &#125;,</span><br><span class="line">        output: &#123;</span><br><span class="line">            comments: false,</span><br><span class="line">        &#125;,</span><br><span class="line">        mangle: &#123;</span><br><span class="line">            properties: &#123;</span><br><span class="line">                &#x2F;&#x2F; keep_fnames: false,</span><br><span class="line">                &#x2F;* 说明：混淆正在表达式就非常好写 *&#x2F;</span><br><span class="line">                regex: &#x2F;(^__|^m_)\w+&#x2F;,</span><br><span class="line">                reserved: [&quot;$&quot;, &quot;iv&quot;, &quot;mode&quot;, &quot;padding&quot;, &quot;CryptoJS&quot;]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    cache: true,</span><br><span class="line">    extractComments: false,</span><br><span class="line">    sourceMap: false,</span><br><span class="line">    parallel: true</span><br><span class="line">&#125;</span><br><span class="line">),</span><br></pre></td></tr></table></figure><h3 id="混淆效果"><a href="#混淆效果" class="headerlink" title="混淆效果"></a>混淆效果</h3><p><img data-src="https://cdn.jsdelivr.net/gh/aa4790139/BlogPicBed@master/img/20201229141408.png" alt=""></p><h3 id="Demo源码工程"><a href="#Demo源码工程" class="headerlink" title="Demo源码工程"></a>Demo源码工程</h3><ul><li>访问地址：<a href="https://github.com/aa4790139/webpack4_confuse_demo">https://github.com/aa4790139/webpack4_confuse_demo</a></li></ul><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><ul><li><a href="https://www.freebuf.com/articles/web/102269.html">可信前端之路：代码保护</a></li><li><a href="https://webpack.docschina.org/plugins/uglifyjs-webpack-plugin/">UglifyjsWebpackPlugin 使用说明</a></li><li><a href="https://github.com/LiPinghai/UglifyJSDocCN/blob/master/README.md#compress-options">UglifyJSDocCN</a></li><li><a href="http://lisperator.net/uglifyjs/transform">UglifyJS</a></li><li><a href="https://segmentfault.com/a/1190000008995453">UglifyJS中文文档</a></li><li><a href="https://github.com/yacan8/blog/blob/master/posts/JavaScript%E6%B7%B7%E6%B7%86%E5%AE%89%E5%85%A8%E5%8A%A0%E5%9B%BA.md">JavaScript混淆安全加固</a></li></ul><hr><blockquote><p>以上: 如发现有问题，欢迎留言指出，我及时更正</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;概要内容&quot;&gt;&lt;a href=&quot;#概要内容&quot; class=&quot;headerlink&quot; title=&quot;概要内容&quot;&gt;&lt;/a&gt;概要内容&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;代码混淆&lt;/li&gt;
&lt;li&gt;环境准备&lt;/li&gt;
&lt;li&gt;如何配置UglifyJsPlugin混淆参数&lt;/li&gt;
&lt;li&gt;混淆效果&lt;/li&gt;
&lt;li&gt;Demo源码工程&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Web安全" scheme="https://yanxuewen.cn/categories/Web%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="混淆" scheme="https://yanxuewen.cn/tags/%E6%B7%B7%E6%B7%86/"/>
    
    <category term="UglifyJS" scheme="https://yanxuewen.cn/tags/UglifyJS/"/>
    
  </entry>
  
  <entry>
    <title>Web如何防调试</title>
    <link href="https://yanxuewen.cn/2020/12/27/Web01/"/>
    <id>https://yanxuewen.cn/2020/12/27/Web01/</id>
    <published>2020-12-27T11:26:34.840Z</published>
    <updated>2020-12-27T12:09:27.274Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概要内容"><a href="#概要内容" class="headerlink" title="概要内容"></a>概要内容</h3><ul><li>常用防调试方法</li><li>引入条件编译打包</li></ul><a id="more"></a><hr><h3 id="常用防调试方法"><a href="#常用防调试方法" class="headerlink" title="常用防调试方法"></a>常用防调试方法</h3><ul><li>屏蔽：相关按键 + 鼠标右键</li><li>检测控制台是否打开</li><li>检测DevTools 是否打开</li><li>工具类：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;*************************************************************************</span><br><span class="line">&#x2F;&#x2F;     创建日期:     2020-12-23 04:12:52</span><br><span class="line">&#x2F;&#x2F;     文件名称:     AntiDebugUtil.js</span><br><span class="line">&#x2F;&#x2F;     创建作者:     Harry</span><br><span class="line">&#x2F;&#x2F;     版权所有:     剑齿虎</span><br><span class="line">&#x2F;&#x2F;     开发版本:     V1.0</span><br><span class="line">&#x2F;&#x2F;     相关说明:     反调试程序</span><br><span class="line">&#x2F;&#x2F;*************************************************************************</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;-------------------------------------------------------------------------</span><br><span class="line">function AntiDebugUtils() &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;-------------------------------------------------------------------------</span><br><span class="line">&#x2F;**</span><br><span class="line"> * 监听按键 + 鼠标右键</span><br><span class="line"> * *&#x2F;</span><br><span class="line">AntiDebugUtils.prototype.registerKeyDown &#x3D; function () &#123;</span><br><span class="line">  console.log(&quot;hook-----&gt;registerKeyDown&quot;);</span><br><span class="line">  &#x2F;*监听F12、Ctrl + Shift + I、Ctrl + S*&#x2F;</span><br><span class="line">  document.onkeydown &#x3D; function (event) &#123;</span><br><span class="line">    if (event.key &#x3D;&#x3D;&#x3D; &quot;F12&quot;) &#123;</span><br><span class="line">      console.log(&quot;KeyDown: F12&quot;);</span><br><span class="line">      event.returnValue &#x3D; false;</span><br><span class="line">    &#125; else if (event.ctrlKey &amp;&amp; event.shiftKey &amp;&amp; event.key &#x3D;&#x3D;&#x3D; &quot;I&quot;) &#123;&#x2F;&#x2F;此处I必须大写</span><br><span class="line">      console.log(&quot;KeyDown: Ctrl + Shift + I&quot;);</span><br><span class="line">      event.returnValue &#x3D; false;</span><br><span class="line">    &#125; else if (event.ctrlKey &amp;&amp; event.key &#x3D;&#x3D;&#x3D; &quot;s&quot;) &#123;&#x2F;&#x2F;此处s必须小写</span><br><span class="line">      console.log(&quot;KeyDown: Ctrl + S&quot;);</span><br><span class="line">      event.returnValue &#x3D; false;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  &#x2F;*</span><br><span class="line">* 监听右键菜单</span><br><span class="line">* *&#x2F;</span><br><span class="line">  document.oncontextmenu &#x3D; function (event) &#123;</span><br><span class="line">    console.log(&quot;KeyDown: 鼠标右键&quot;);</span><br><span class="line">    event.returnValue &#x3D; false;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;-------------------------------------------------------------------------</span><br><span class="line">&#x2F;*</span><br><span class="line">* 检测控制台是否打开</span><br><span class="line">* *&#x2F;</span><br><span class="line">AntiDebugUtils.prototype.registerConsoleWindow &#x3D; function () &#123;</span><br><span class="line">  console.log(&quot;hook-----&gt;registerConsoleWindow&quot;);</span><br><span class="line">  setInterval(function () &#123;</span><br><span class="line">    const before &#x3D; new Date();</span><br><span class="line">    (function () &#123;</span><br><span class="line">    &#125;).constructor(&quot;debugger&quot;)();</span><br><span class="line">    &#x2F;&#x2F; debugger;</span><br><span class="line">    const after &#x3D; new Date();</span><br><span class="line">    const cost &#x3D; after.getTime() - before.getTime();</span><br><span class="line">    if (cost &gt; 100) &#123;</span><br><span class="line">      console.log(&quot;registerConsoleWindow: 检测到打开了调试窗口&quot;);</span><br><span class="line">      window.location &#x3D; &quot;about:blank&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;, 1000);</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;-------------------------------------------------------------------------</span><br><span class="line">&#x2F;*</span><br><span class="line">* 检测DevTools 是否打开</span><br><span class="line">* *&#x2F;</span><br><span class="line">AntiDebugUtils.prototype.registerDevTools &#x3D; function () &#123;</span><br><span class="line">  console.log(&quot;hook-----&gt;registerDevTools&quot;);</span><br><span class="line">  let div &#x3D; document.createElement(&#39;div&#39;);</span><br><span class="line">  let loop &#x3D; setInterval(() &#x3D;&gt; &#123;</span><br><span class="line">    console.log(div);</span><br><span class="line">    console.clear();</span><br><span class="line">  &#125;);</span><br><span class="line">  Object.defineProperty(div, &quot;id&quot;, &#123;</span><br><span class="line">    get: () &#x3D;&gt; &#123;</span><br><span class="line">      clearInterval(loop);</span><br><span class="line">      window.location &#x3D; &quot;about:blank&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;-------------------------------------------------------------------------</span><br><span class="line">AntiDebugUtils.prototype.hook &#x3D; function () &#123;</span><br><span class="line">  console.log(&quot;hook-----&gt;&quot;);</span><br><span class="line">  &#x2F;&#x2F; this.registerKeyDown();</span><br><span class="line">  &#x2F;&#x2F; this.registerConsoleWindow();</span><br><span class="line">  &#x2F;&#x2F; this.registerDevTools();</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;-------------------------------------------------------------------------</span><br><span class="line">const antiDebugUtils &#x3D; new AntiDebugUtils();</span><br><span class="line">export default antiDebugUtils;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>使用方法：main.js 引入和挂在即可<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;* IFTRUE_isRelease *&#x2F;</span><br><span class="line">import antiDebugUtils from &quot;.&#x2F;utls&#x2F;AntiDebugUtil&quot;;</span><br><span class="line">antiDebugUtils.hook();</span><br><span class="line">&#x2F;*FITRUE_isRelease *&#x2F;</span><br></pre></td></tr></table></figure></li></ul><h3 id="引入条件编译打包："><a href="#引入条件编译打包：" class="headerlink" title="引入条件编译打包："></a>引入条件编译打包：</h3><blockquote><p>项目随着需求不断迭代开发，无法避免的会出现各种环境、各种渠道等，然后针对其打出不同的包，所以就需要我们去了解下条件编译，针对不同条件把不符合条件的代码(JS\CSS\HTML)排除，条件编译插件很多，推荐js-conditional-compile-loader插件，我针对JS\CSS\HTML 分别进行条件编译测试都通过，简单好用</p></blockquote><ul><li>配置条件变量：修改webpack.base.conf.js中的配置(提示：如果使用不同版本Webpack，可能没有webpack.base.conf.js，那么找对应的webpack配置文件即可)<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 根据自己的喜好在options中添加条件变量</span><br><span class="line">const conditionalCompiler &#x3D; &#123;</span><br><span class="line">  loader: &#39;js-conditional-compile-loader&#39;,</span><br><span class="line">  options: &#123;</span><br><span class="line">    isBeta: (process.env.ENV_CONFIG !&#x3D;&#x3D; &quot;prod&quot;) ? true : false,</span><br><span class="line">    isRelease: (process.env.ENV_CONFIG &#x3D;&#x3D;&#x3D; &quot;prod&quot;) ? true : false</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 找到module.exports中的module.rules, 修改成如下样子</span><br><span class="line">&#123;</span><br><span class="line">    test: &#x2F;\.vue$&#x2F;,</span><br><span class="line">    use: [&#39;vue-loader&#39;, conditionalCompiler],</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">test: &#x2F;\.js$&#x2F;,</span><br><span class="line">include: [resolve(&#39;src&#39;), resolve(&#39;test&#39;)],</span><br><span class="line">use: [</span><br><span class="line">    &#x2F;&#x2F;step-2</span><br><span class="line">    &#39;babel-loader?cacheDirectory&#39;,</span><br><span class="line">    &#x2F;&#x2F;step-1</span><br><span class="line">    conditionalCompiler,</span><br><span class="line">],</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure></li><li><p>使用方法：</p><blockquote><p>/<em> IFTRUE_条件变量 </em>/  you need contorl coding..  /<em>FITRUE_条件变量 </em>/</p></blockquote></li><li><p>示例：</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;* IFTRUE_isRelease *&#x2F;</span><br><span class="line">import antiDebugUtils from &quot;.&#x2F;utls&#x2F;AntiDebugUtil&quot;;</span><br><span class="line">antiDebugUtils.hook();</span><br><span class="line">&#x2F;*FITRUE_isRelease *&#x2F;</span><br></pre></td></tr></table></figure><ul><li>更多：<blockquote><p>其实上面的一种方法就够我用了，你如需了解更多用法请查看API <a href="https://github.com/hzsrc/js-conditional-compile-loader/blob/master/readme-cn.md">传输门</a></p></blockquote></li></ul><hr><h3 id="最后："><a href="#最后：" class="headerlink" title="最后："></a>最后：</h3><blockquote><p>现在我们知道怎么防调试了，那接下来怎么做到更安全，那就是把代码混淆掉。下一篇：<a href="">Web代码混淆</a></p></blockquote><h3 id="参考文献："><a href="#参考文献：" class="headerlink" title="参考文献："></a>参考文献：</h3><ul><li><a href="https://www.zhangbj.com/p/585.html">Web防调试方法</a></li><li><a href="https://github.com/hzsrc/js-conditional-compile-loader/blob/master/readme-cn.md">js-conditional-compile-loader 使用教程</a></li></ul><h3 id="更多相关："><a href="#更多相关：" class="headerlink" title="更多相关："></a>更多相关：</h3><ul><li>[conditional-compile-loader]<a href="https://developer.aliyun.com/mirror/npm/package/conditional-compile-loader">https://developer.aliyun.com/mirror/npm/package/conditional-compile-loader</a></li><li><a href="https://flands.com/2018/11/06/29.%E6%9D%A1%E4%BB%B6%E7%BC%96%E8%AF%91/#package-json">webpack Vue条件编译</a></li><li><a href="https://zoumiaojiang.com/article/common-web-security/">常见 Web 安全攻防总结</a></li><li><a href="https://www.zhangbj.com/p/586.html">攻破Web防调试方法</a></li></ul><hr><blockquote><p>以上: 如发现有问题，欢迎留言指出，我及时更正</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;概要内容&quot;&gt;&lt;a href=&quot;#概要内容&quot; class=&quot;headerlink&quot; title=&quot;概要内容&quot;&gt;&lt;/a&gt;概要内容&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;常用防调试方法&lt;/li&gt;
&lt;li&gt;引入条件编译打包&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Web安全" scheme="https://yanxuewen.cn/categories/Web%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="防调试" scheme="https://yanxuewen.cn/tags/%E9%98%B2%E8%B0%83%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>对称加密和非对称加密的应用</title>
    <link href="https://yanxuewen.cn/2020/12/27/JS02/"/>
    <id>https://yanxuewen.cn/2020/12/27/JS02/</id>
    <published>2020-12-27T07:46:52.119Z</published>
    <updated>2020-12-29T05:33:01.759Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概要内容"><a href="#概要内容" class="headerlink" title="概要内容"></a>概要内容</h3><ul><li>什么是对称加密</li><li>对称加密demo</li><li>什么是非对称加密</li><li>非对称加密demo</li><li>对称加密与非对称加密组合使用</li><li>介绍一套可行的混合加密方案，怎么应用到接口数据加密中</li><li>Demo源码工程</li></ul><h2 id=""><a href="#" class="headerlink" title=""></a><a id="more"></a></h2><h3 id="什么是对称加密"><a href="#什么是对称加密" class="headerlink" title="什么是对称加密"></a>什么是对称加密</h3><ul><li>定义：<blockquote><p>对称密钥算法（英语：Symmetric-key algorithm）又称为对称加密、私钥加密、共享密钥加密，是密码学中的一类加密算法。这类算法在加密和解密时使用相同的密钥，或是使用两个可以简单地相互推算的密钥</p></blockquote></li><li>优点：<blockquote><p>算法公开、计算量小、加密速度快、加密效率高，适合对大量数据进行加密的场景。 比如 HLS（HTTP Live Streaming）普通加密场景中，一般会使用 AES-128 对称加密算法对 TS 切片进行加密，以保证多媒体资源安全</p></blockquote></li><li><p>缺点：</p><blockquote><p>安全性不高，只要拿到秘钥就可以把数据解开</p></blockquote></li><li><p>对称加密的过程：</p><blockquote><p>发送方使用密钥将明文数据加密成密文，然后发送出去，接收方收到密文后，使用同一个密钥将密文解密成明文读取<br>  <img data-src="https://cdn.jsdelivr.net/gh/aa4790139/BlogPicBed@master/img/QQ%E5%9B%BE%E7%89%8720201227142444.png" alt=""></p></blockquote></li><li><p>个人理解：</p><blockquote><p>对称加密就好比一把锁的钥匙，一个密码箱存了东西，如果你有钥匙就可以把密码箱里面的宝贝取走</p></blockquote></li></ul><hr><h3 id="对称加密demo"><a href="#对称加密demo" class="headerlink" title="对称加密demo"></a>对称加密demo</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">this.key &#x3D; CryptoJS.enc.Utf8.parse(&quot;0123456789abcdef&quot;);</span><br><span class="line">this.iv &#x3D; CryptoJS.enc.Utf8.parse(&quot;abcdef0123456789&quot;);</span><br><span class="line">&#x2F;**</span><br><span class="line">* AES 加密</span><br><span class="line">* @param iv</span><br><span class="line">* @param key</span><br><span class="line">* @param content 加密数据</span><br><span class="line">* @returns &#123;string&#125;</span><br><span class="line">* @private</span><br><span class="line">*&#x2F;</span><br><span class="line">__aesEncrypt(iv, key, content) &#123;</span><br><span class="line">    let text &#x3D; CryptoJS.enc.Utf8.parse(JSON.stringify(content));</span><br><span class="line">    let encrypted &#x3D; CryptoJS.AES.encrypt(text, key,</span><br><span class="line">        &#123;</span><br><span class="line">            iv: iv,</span><br><span class="line">            mode: CryptoJS.mode.CBC,</span><br><span class="line">            padding: CryptoJS.pad.Pkcs7,</span><br><span class="line">        &#125;);</span><br><span class="line">    return encrypted.toString();</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line">* AES 解密</span><br><span class="line">* @param iv</span><br><span class="line">* @param key</span><br><span class="line">* @param content  解密数据</span><br><span class="line">* @returns &#123;string&#125;</span><br><span class="line">* @private</span><br><span class="line">*&#x2F;</span><br><span class="line">__aesDecrypt(iv, key, content) &#123;</span><br><span class="line">    let decrypt &#x3D; CryptoJS.AES.decrypt(content, key, &#123;</span><br><span class="line">        iv: iv,</span><br><span class="line">        mode: CryptoJS.mode.CBC,</span><br><span class="line">        padding: CryptoJS.pad.Pkcs7,</span><br><span class="line">    &#125;);</span><br><span class="line">    let decryptText &#x3D; decrypt.toString(CryptoJS.enc.Utf8);</span><br><span class="line">    return decryptText.replace(&#x2F;\&quot;&#x2F;g, &quot;&quot;);</span><br><span class="line">&#125;,</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h3 id="什么是非对称加密"><a href="#什么是非对称加密" class="headerlink" title="什么是非对称加密"></a>什么是非对称加密</h3><ul><li><p>定义：</p><blockquote><p>非对称加密算法需要两个密钥：公开密钥（publickey：简称公钥）和私有密钥（privatekey：简称私钥）。公钥与私钥是一对，如果用公钥对数据进行加密，只有用对应的私钥才能解密。 因为加密和解密使用的是两个不同的密钥，所以这种算法叫作非对称加密算法</p></blockquote></li><li><p>优点：</p><blockquote><p>安全性更高，公钥是公开的，私钥是自己保存的，不需要将私钥提供给别人</p></blockquote></li><li><p>缺点</p><blockquote><p>加解密速度慢，只适合应对小数据加解密</p></blockquote></li><li><p>对称加密的过程：<br><img data-src="https://cdn.jsdelivr.net/gh/aa4790139/BlogPicBed@master/img/QQ%E6%88%AA%E5%9B%BE20201227142658.png" alt=""></p></li></ul><ul><li><p>个人理解</p><blockquote><p>非对称加密：公钥就好比未锁的密码箱，只能存东西进去然后锁住。秘钥就好比密码箱的钥匙，可以打开秘密箱然后把里面的宝贝取走</p></blockquote></li><li><p>非对称加密demo</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">this.rsaEncryptor &#x3D; new JSEncrypt();</span><br><span class="line">this.rsaEncryptor.setPublicKey(this.rsa_pub_key);</span><br><span class="line">this.rsaDecryptor &#x3D; new JSEncrypt();</span><br><span class="line">this.rsaDecryptor.setPrivateKey(this.rsa_pri_key);</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line">* RSA 加密</span><br><span class="line">* @param content</span><br><span class="line">* @returns &#123;CipherParams|PromiseLike&lt;ArrayBuffer&gt;&#125;</span><br><span class="line">* @private</span><br><span class="line">*&#x2F;</span><br><span class="line">__rsaEncrypt(content) &#123;</span><br><span class="line">    return this.rsaEncryptor.encrypt(content);</span><br><span class="line">&#125;,</span><br><span class="line">&#x2F;**</span><br><span class="line">* RSA 解密</span><br><span class="line">* @param content</span><br><span class="line">* @returns &#123;WordArray|PromiseLike&lt;ArrayBuffer&gt;&#125;</span><br><span class="line">* @private</span><br><span class="line">*&#x2F;</span><br><span class="line">__rsaDecrypt(content) &#123;</span><br><span class="line">    return this.rsaDecryptor.decrypt(content);</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><hr><h3 id="对称加密与非对称加密组合使用"><a href="#对称加密与非对称加密组合使用" class="headerlink" title="对称加密与非对称加密组合使用"></a>对称加密与非对称加密组合使用</h3><blockquote><p>现在对称加密和非对称加密的缺点我们都知道了，那就结合对称加密和非对称加密的优点来个demo，思路：针对小数据对称加密的iv和key，采用非对称加密；针对大数据data采用对称加密。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;**</span><br><span class="line">* 混合加密</span><br><span class="line">* @param iv</span><br><span class="line">* @param key</span><br><span class="line">* @param content</span><br><span class="line">* @returns &#123;&#123;data: string, iv: (CipherParams|PromiseLike&lt;ArrayBuffer&gt;), key: (CipherParams|PromiseLike&lt;ArrayBuffer&gt;)&#125;&#125;</span><br><span class="line">* @private</span><br><span class="line">*&#x2F;</span><br><span class="line">__hybirdEncrypt(iv, key, content) &#123;</span><br><span class="line">    const aesEncryptData &#x3D; this.__aesEncrypt(iv, key, content);</span><br><span class="line">    const rsaEncryptIv &#x3D; this.__rsaEncrypt(iv);</span><br><span class="line">    const rsaEncryptKey &#x3D; this.__rsaEncrypt(key);</span><br><span class="line">    return &#123;</span><br><span class="line">        iv: rsaEncryptIv,</span><br><span class="line">        key: rsaEncryptKey,</span><br><span class="line">        data: aesEncryptData,</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line">* 混合解密</span><br><span class="line">* @param encryptInfo</span><br><span class="line">* @returns &#123;string&#125;</span><br><span class="line">* @private</span><br><span class="line">*&#x2F;</span><br><span class="line">__hybirdDecrypt(encryptInfo) &#123;</span><br><span class="line">    const iv &#x3D; this.rsaDecryptor.decrypt(encryptInfo.iv);</span><br><span class="line">    const key &#x3D; this.rsaDecryptor.decrypt(encryptInfo.key);</span><br><span class="line">    const data &#x3D; encryptInfo.data;</span><br><span class="line">    return this.__aesDecrypt(iv, key, data);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="介绍一套可行混合加密方案，怎么应用到接口数据加密中。流程图如下："><a href="#介绍一套可行混合加密方案，怎么应用到接口数据加密中。流程图如下：" class="headerlink" title="介绍一套可行混合加密方案，怎么应用到接口数据加密中。流程图如下："></a>介绍一套可行混合加密方案，怎么应用到接口数据加密中。流程图如下：</h3><ul><li>思路如下：<ul><li>第1步：创建一套RSA 公私钥，公钥前端拿着，私钥服务端拿着</li><li>第2步：前端为每一个网络请求生成RequestID</li><li>第3步：客户端生成AES Key，然后将RequestID 作为Key,AES Key 作为Value 存内存</li><li>第4步：客户端用生成的AES Key 加密请求数据Request Data，用RSA公钥对AES Key进行加密，同时把requestID、加密数据、加密AES Key 发送给服务端</li><li>第5步：服务端用RSA私钥解密被加密的AES Key，然后再用解开的AES Key 对RequestData数据进行解密</li><li>第6步：服务端用AES Key对响应数据ResposneData加密+RequestID、返回给前端</li><li>第7步：前端根据服务端返回的RequestID 取出内存的AES key, 用AES key 解密Resposne Data数据，用完后删除内存RequestID 的AES key 数据。</li><li>最后：前端每次发送请求都创建AES Key 去加密数据，收到服务端响应数据解密用完后，就删除掉内存中的AES Key数据，如此循环就用一套RSA公私钥解决混合加密问题</li></ul></li><li>流程图：<br><img data-src="https://cdn.jsdelivr.net/gh/aa4790139/BlogPicBed@master/img/%E6%B7%B7%E5%90%88%E5%8A%A0%E5%AF%86%E6%96%B9%E6%A1%88%E6%B5%81%E7%A8%8B%E5%9B%BE.jpg" alt=""></li></ul><hr><h3 id="Demo源码工程："><a href="#Demo源码工程：" class="headerlink" title="Demo源码工程："></a>Demo源码工程：</h3><ul><li>访问地址：<a href="https://github.com/aa4790139/encrypt_decrypt_sample">https://github.com/aa4790139/encrypt_decrypt_sample</a></li></ul><h3 id="最后："><a href="#最后：" class="headerlink" title="最后："></a>最后：</h3><blockquote><p>由于对称加密DES安全性已不太强，所以就选择了替代品AES。非常感谢阿宝哥提供的<a href="https://mp.weixin.qq.com/s/i_Clg5kmTBwcFoSUNO-naQ">玩转混合加密</a>文章，讲得通俗易懂，让我受益匪浅。最后阿宝哥提到把AES key 存放内存容易让他人搞到AES Key。所以我就去了解Web如何防调试、代<br>码怎么混淆等，下一篇：<a href="https://yanxuewen.cn/2020/12/27/Web01/">Web如何防调试</a></p></blockquote><hr><h3 id="参考文献："><a href="#参考文献：" class="headerlink" title="参考文献："></a>参考文献：</h3><ul><li><a href="https://mp.weixin.qq.com/s/i_Clg5kmTBwcFoSUNO-naQ">阿宝哥-玩转混合加密</a></li></ul><hr><h3 id="更多相关资料："><a href="#更多相关资料：" class="headerlink" title="更多相关资料："></a>更多相关资料：</h3><ul><li><a href="https://www.jianshu.com/p/c44a8a1b7c38">DES加密算法原理</a></li><li><a href="https://www.cxyxiaowu.com/1478.html">算法科普：神秘的 DES 加密算法</a></li></ul><hr><blockquote><p>以上: 如发现有问题，欢迎留言指出，我及时更正</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;概要内容&quot;&gt;&lt;a href=&quot;#概要内容&quot; class=&quot;headerlink&quot; title=&quot;概要内容&quot;&gt;&lt;/a&gt;概要内容&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;什么是对称加密&lt;/li&gt;
&lt;li&gt;对称加密demo&lt;/li&gt;
&lt;li&gt;什么是非对称加密&lt;/li&gt;
&lt;li&gt;非对称加密demo&lt;/li&gt;
&lt;li&gt;对称加密与非对称加密组合使用&lt;/li&gt;
&lt;li&gt;介绍一套可行的混合加密方案，怎么应用到接口数据加密中&lt;/li&gt;
&lt;li&gt;Demo源码工程&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;</summary>
    
    
    
    <category term="加密" scheme="https://yanxuewen.cn/categories/%E5%8A%A0%E5%AF%86/"/>
    
    
    <category term="对称加密" scheme="https://yanxuewen.cn/tags/%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86/"/>
    
    <category term="非对称加密" scheme="https://yanxuewen.cn/tags/%E9%9D%9E%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86/"/>
    
    <category term="AES" scheme="https://yanxuewen.cn/tags/AES/"/>
    
    <category term="RSA" scheme="https://yanxuewen.cn/tags/RSA/"/>
    
  </entry>
  
  <entry>
    <title>C# 与 JS 之间Gzip互通</title>
    <link href="https://yanxuewen.cn/2020/12/16/JS01/"/>
    <id>https://yanxuewen.cn/2020/12/16/JS01/</id>
    <published>2020-12-16T13:43:35.821Z</published>
    <updated>2021-01-15T12:46:08.143Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概要内容"><a href="#概要内容" class="headerlink" title="概要内容"></a>概要内容</h3><ul><li>JS 压缩 Gzip demo</li><li>JS 压缩 Gzip + base64 demo</li><li>JS 解压 CSharp 的 Gzip demo</li><li>JS 解压 CSharp 的 base64 + gzip</li><li>CSharp 压缩 Gzip demo</li><li>CSharp 压缩 Gzip + base64 demo</li><li>CSharp 解压 JS 的 Gzip demo</li><li>CSharp 解压 JS 的 base64 + gzip</li><li>Base64 encode 和 decode </li></ul><h3 id="源码地址："><a href="#源码地址：" class="headerlink" title="源码地址："></a>源码地址：</h3><p><a href="https://github.com/aa4790139/GzipSample">https://github.com/aa4790139/GzipSample</a></p><a id="more"></a><h3 id="GZip-文件结构图"><a href="#GZip-文件结构图" class="headerlink" title="GZip 文件结构图"></a>GZip 文件结构图</h3><p><img data-src="https://cdn.jsdelivr.net/gh/aa4790139/BlogPicBed@master//img/20210115204550.jpg" alt=""></p><!--more--><h3 id="参考文献："><a href="#参考文献：" class="headerlink" title="参考文献："></a>参考文献：</h3><ul><li><a href="https://stackabuse.com/encoding-and-decoding-base64-strings-in-node-js/">Encoding and Decoding Base64 Strings in Node.js</a></li><li><a href="https://zh.wikipedia.org/wiki/DEFLATE">DEFLATE</a></li><li><a href="https://stackoverflow.com/questions/246801/how-can-you-encode-a-string-to-base64-in-javascript">How can you encode a string to Base64 in JavaScript?</a></li><li><a href="https://stackoverflow.com/questions/3195865/converting-byte-array-to-string-in-javascript">Converting byte array to string in javascript</a></li><li><a href="https://www.jianshu.com/p/c5df0156b229">Array.prototype.slice.call()方法详解</a></li><li><a href="https://stackoverflow.com/questions/7056925/how-does-array-prototype-slice-call-work">how does Array.prototype.slice.call() work?</a></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Bitwise_Operators">JS按位操作符</a></li><li><a href="https://www.iditect.com/how-to/58717282.html">Remove trailing zeros from byte[]</a></li><li><a href="https://stackoverflow.com/questions/17191945/conversion-between-utf-8-arraybuffer-and-string">Conversion between UTF-8 ArrayBuffer and String</a></li><li><a href="https://tool.oschina.net/commons?type=4">ASCLL对照表</a></li><li><a href="https://blog.csdn.net/yc0188/article/details/4155168">GZIP文件格式简介</a></li></ul><hr><blockquote><p>以上: 如发现有问题，欢迎留言指出，我及时更正</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;概要内容&quot;&gt;&lt;a href=&quot;#概要内容&quot; class=&quot;headerlink&quot; title=&quot;概要内容&quot;&gt;&lt;/a&gt;概要内容&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;JS 压缩 Gzip demo&lt;/li&gt;
&lt;li&gt;JS 压缩 Gzip + base64 demo&lt;/li&gt;
&lt;li&gt;JS 解压 CSharp 的 Gzip demo&lt;/li&gt;
&lt;li&gt;JS 解压 CSharp 的 base64 + gzip&lt;/li&gt;
&lt;li&gt;CSharp 压缩 Gzip demo&lt;/li&gt;
&lt;li&gt;CSharp 压缩 Gzip + base64 demo&lt;/li&gt;
&lt;li&gt;CSharp 解压 JS 的 Gzip demo&lt;/li&gt;
&lt;li&gt;CSharp 解压 JS 的 base64 + gzip&lt;/li&gt;
&lt;li&gt;Base64 encode 和 decode &lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;源码地址：&quot;&gt;&lt;a href=&quot;#源码地址：&quot; class=&quot;headerlink&quot; title=&quot;源码地址：&quot;&gt;&lt;/a&gt;源码地址：&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/aa4790139/GzipSample&quot;&gt;https://github.com/aa4790139/GzipSample&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="压缩" scheme="https://yanxuewen.cn/categories/%E5%8E%8B%E7%BC%A9/"/>
    
    
    <category term="C#" scheme="https://yanxuewen.cn/tags/C/"/>
    
    <category term="Gzip" scheme="https://yanxuewen.cn/tags/Gzip/"/>
    
    <category term="JS" scheme="https://yanxuewen.cn/tags/JS/"/>
    
  </entry>
  
  <entry>
    <title>uni-app 如何引入Iconfont阿里巴巴矢量图标库</title>
    <link href="https://yanxuewen.cn/2020/11/13/UniApp01/"/>
    <id>https://yanxuewen.cn/2020/11/13/UniApp01/</id>
    <published>2020-11-13T08:34:23.759Z</published>
    <updated>2021-02-17T08:13:35.576Z</updated>
    
    <content type="html"><![CDATA[<h3 id="步骤如下"><a href="#步骤如下" class="headerlink" title="步骤如下:"></a>步骤如下:</h3><ol><li>下载图标项目, 解压后效果如下<br><img data-src="https://cdn.jsdelivr.net/gh/aa4790139/BlogPicBed@master/img/20201113164039.png" alt=""></li><li><p>修改iconfont.css文件</p><p> 修改前格式：</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">@font-face &#123;font-family: &quot;iconfont&quot;;</span><br><span class="line">src: url(&#39;iconfont.eot?t&#x3D;1605254910083&#39;); &#x2F;* IE9 *&#x2F;</span><br><span class="line">src: url(&#39;iconfont.eot?t&#x3D;1605254910083#iefix&#39;) format(&#39;embedded-opentype&#39;), &#x2F;* IE6-IE8 *&#x2F;</span><br><span class="line">url(&#39;data:application&#x2F;x-font-woff2;charset&#x3D;utf-8;base64,转换的base64内容&#39;) format(&#39;woff2&#39;),</span><br><span class="line">url(&#39;iconfont.woff?t&#x3D;1605254910083&#39;) format(&#39;woff&#39;),</span><br><span class="line">url(&#39;iconfont.ttf?t&#x3D;1605254910083&#39;) format(&#39;truetype&#39;), &#x2F;* chrome, firefox, opera, Safari, Android, iOS 4.2+ *&#x2F;</span><br><span class="line">url(&#39;iconfont.svg?t&#x3D;1605254910083#iconfont&#39;) format(&#39;svg&#39;); &#x2F;* iOS 4.1- *&#x2F;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 修改后格式: </p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">@font-face &#123;</span><br><span class="line">    font-family: &quot;iconfont&quot;;</span><br><span class="line">    src: url(&#39;data:application&#x2F;x-font-woff2;charset&#x3D;utf-8;base64,转换的base64内容&#39;) format(&#39;woff2&#39;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>Copy字体文件iconfont.ttf和样式文件iconfont.css 至UniApp项目static/font目录中</li></ol><hr><blockquote><p>以上: 如发现有问题，欢迎留言指出，我及时更正</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;步骤如下&quot;&gt;&lt;a href=&quot;#步骤如下&quot; class=&quot;headerlink&quot; title=&quot;步骤如下:&quot;&gt;&lt;/a&gt;步骤如下:&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;下载图标项目, 解压后效果如下&lt;br&gt;&lt;img data-src=&quot;https://cdn.jsdelivr</summary>
      
    
    
    
    <category term="前端" scheme="https://yanxuewen.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="UniApp" scheme="https://yanxuewen.cn/tags/UniApp/"/>
    
  </entry>
  
  <entry>
    <title>Python-04：AppWeb自动化测试【打开App切换WebView登录】</title>
    <link href="https://yanxuewen.cn/2020/11/04/AutoTest04/"/>
    <id>https://yanxuewen.cn/2020/11/04/AutoTest04/</id>
    <published>2020-11-04T03:53:16.957Z</published>
    <updated>2020-12-16T15:13:31.445Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概要内容"><a href="#概要内容" class="headerlink" title="概要内容"></a>概要内容</h3><ul><li>环境准备</li><li>测试步骤</li><li>案例代码</li></ul><a id="more"></a><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><ol><li>NodeJS v12.13.1</li><li>JDK 1.8.0_191</li><li>Android SDK </li><li>Appium-Python-Client </li></ol><blockquote><p>具体教程请看: <a href="https://yanxuewen.cn/2020/10/22/AutoTest02/">自动化测试-02：实践</a></p></blockquote><h3 id="步骤如下"><a href="#步骤如下" class="headerlink" title="步骤如下"></a>步骤如下</h3><ol><li>AppWebView开启调试模式： <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setWebContentsDebuggingEnabled(true);</span><br></pre></td></tr></table></figure></li><li>获取Android Chrome 版本： <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb shell am start -a android.intent.action.VIEW -d  https:&#x2F;&#x2F;liulanmi.com&#x2F;labs&#x2F;core.html</span><br></pre></td></tr></table></figure></li><li>根据Android Chrome版本，下载对应ChromeDriver驱动 <a href="https://chromedriver.chromium.org/downloads">下载地址</a></li><li>将下载的ChromeDriver Copy 至 Appium 目录，比如我的Appium目录： <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Program Files\Appium\resources\app\node_modules\appium\node_modules\appium-chromedriver\chromedriver\win</span><br></pre></td></tr></table></figure></li><li>启动APP后并跳转App内嵌的WebView页面，使用Chrome获取WebView中的元素 <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">打开Chrome </span><br><span class="line">地址栏输入：chrome:&#x2F;&#x2F;inspect</span><br></pre></td></tr></table></figure> 如下图所示：<br> <img data-src="https://cdn.jsdelivr.net/gh/aa4790139/BlogPicBed@master/img/20201105212810.png" alt=""></li></ol><h3 id="案例代码"><a href="#案例代码" class="headerlink" title="案例代码"></a>案例代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"># 案例：自动化测试-登录</span><br><span class="line"></span><br><span class="line">from appium import webdriver</span><br><span class="line">from selenium.webdriver.common.by import By</span><br><span class="line"></span><br><span class="line">import time</span><br><span class="line"></span><br><span class="line">desired_caps &#x3D; &#123;&#125;</span><br><span class="line">desired_caps[&quot;platformName&quot;] &#x3D; &quot;android&quot;</span><br><span class="line">desired_caps[&quot;platformVersion&quot;] &#x3D; &quot;7.1.2&quot;</span><br><span class="line">desired_caps[&quot;deviceName&quot;] &#x3D; &quot;127.0.0.1:62001&quot;</span><br><span class="line">desired_caps[&quot;appPackage&quot;] &#x3D; &quot;com.guide.custom&quot;</span><br><span class="line">desired_caps[&quot;appActivity&quot;] &#x3D; &quot;com.anyapps.Activity.AALaunch&quot;</span><br><span class="line">desired_caps[&quot;noReset&quot;] &#x3D; &quot;true&quot;</span><br><span class="line">desired_caps[&quot;autoGrantPermissions&quot;] &#x3D; &quot;true&quot;</span><br><span class="line">desired_caps[&#39;chromeOptions&#39;] &#x3D; &#123;&quot;w3c&quot;:False&#125;</span><br><span class="line">desired_caps[&#39;showChromedriverLog&#39;] &#x3D; True</span><br><span class="line"></span><br><span class="line">driver &#x3D; webdriver.Remote(&#39;http:&#x2F;&#x2F;localhost:4723&#x2F;wd&#x2F;hub&#39;, desired_caps)</span><br><span class="line"></span><br><span class="line">view_context &#x3D; &quot;WEBVIEW_com.guide.custom&quot;</span><br><span class="line">driver.switch_to.context(view_context)</span><br><span class="line">time.sleep(5)</span><br><span class="line">print(driver.current_context)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 获取账号和密码元素，输入账号密码</span><br><span class="line">inputAccount &#x3D; driver.find_element_by_id(&quot;account&quot;)</span><br><span class="line">inputAccount.send_keys(&#39;186xxxxxxx&#39;)</span><br><span class="line">inputPassword &#x3D; driver.find_element_by_id(&quot;password&quot;)</span><br><span class="line">inputPassword.send_keys(&#39;123456&#39;)</span><br><span class="line"># 获取登录元素，点击登录</span><br><span class="line">loginBtn &#x3D; driver.find_element_by_class_name(&#39;confirmDisable&#39;)</span><br><span class="line">loginBtn.click()</span><br></pre></td></tr></table></figure><h3 id="Appium-调试App-原理图"><a href="#Appium-调试App-原理图" class="headerlink" title="Appium 调试App 原理图"></a>Appium 调试App 原理图</h3><p><img data-src="https://cdn.jsdelivr.net/gh/aa4790139/BlogPicBed@master/img/QQ%E6%88%AA%E5%9B%BE20201105213544.png" alt=""></p><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献:"></a>参考文献:</h3><ul><li><a href="https://selenium-python-zh.readthedocs.io/en/latest/index.html">Selenium-Python中文文档</a></li><li><a href="https://github.com/appium/appium/issues/13306">Fail to locate an web element using “findElement” on Android</a></li></ul><hr><blockquote><p>以上: 如发现有问题，欢迎留言指出，我及时更正</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;概要内容&quot;&gt;&lt;a href=&quot;#概要内容&quot; class=&quot;headerlink&quot; title=&quot;概要内容&quot;&gt;&lt;/a&gt;概要内容&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;环境准备&lt;/li&gt;
&lt;li&gt;测试步骤&lt;/li&gt;
&lt;li&gt;案例代码&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="自动化测试" scheme="https://yanxuewen.cn/categories/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="Python" scheme="https://yanxuewen.cn/tags/Python/"/>
    
    <category term="Selenium" scheme="https://yanxuewen.cn/tags/Selenium/"/>
    
    <category term="Appnium" scheme="https://yanxuewen.cn/tags/Appnium/"/>
    
  </entry>
  
  <entry>
    <title>Python-03：Web自动化测试【打开Chrome百度搜索Selenium】</title>
    <link href="https://yanxuewen.cn/2020/11/03/AutoTest03/"/>
    <id>https://yanxuewen.cn/2020/11/03/AutoTest03/</id>
    <published>2020-11-03T13:30:20.853Z</published>
    <updated>2020-12-16T15:13:37.979Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概要内容"><a href="#概要内容" class="headerlink" title="概要内容"></a>概要内容</h3><ul><li>环境准备</li><li>案例：打开Chrome百度搜索Selenium</li><li>原理总结</li></ul><a id="more"></a><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><ol><li>Win10</li><li>Chrome 84.0.4147.135</li><li>ChromeDriver 84.0.4147.30<ol><li>关闭Chrome更新，避免不停换驱动</li><li>下载Chrome对应版本ChromeDriver驱动<a href="https://chromedriver.chromium.org/downloads">下载地址</a></li><li>将ChromeDriver 放到Python安装目录下. 比如：C:\Users\Administrator\AppData\Local\Programs\Python\Python39</li></ol></li><li>Python 3.9.0</li><li>Selenium 3.141.0<br> 安装命令：pip install selenium (提示：如果执行报错，请检查python环境变量配置)</li></ol><h3 id="案例：打开Chrome百度搜索Selenium"><a href="#案例：打开Chrome百度搜索Selenium" class="headerlink" title="案例：打开Chrome百度搜索Selenium"></a>案例：打开Chrome百度搜索Selenium</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">from selenium import  webdriver</span><br><span class="line"># 使用Chrome驱动</span><br><span class="line">driver &#x3D; webdriver.Chrome()</span><br><span class="line"># 让浏览器全屏</span><br><span class="line">driver.maximize_window()</span><br><span class="line"># 打开百度</span><br><span class="line">driver.get(&quot;https:&#x2F;&#x2F;baidu.com&quot;)</span><br><span class="line"># 找到百度搜索框元素</span><br><span class="line">input &#x3D; driver.find_element_by_id(&quot;kw&quot;)</span><br><span class="line"># 往输入框中输入搜索关键词&quot;selenium&quot;</span><br><span class="line">input.send_keys(&quot;selenium&quot;)</span><br><span class="line"># 点击百度一下按钮搜索</span><br><span class="line">search &#x3D; driver.find_element_by_id(&quot;su&quot;)</span><br><span class="line">search.click()</span><br></pre></td></tr></table></figure><h3 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h3><blockquote><p>其实原理就是 Python 通过Selenium 调用浏览器驱动接口，然后驱动Driver接口操作Web中元素进行交互</p></blockquote><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献:"></a>参考文献:</h3><ul><li><a href="https://selenium-python-zh.readthedocs.io/en/latest/index.html">Selenium-Python中文文档</a></li></ul><hr><blockquote><p>以上: 如发现有问题，欢迎留言指出，我及时更正</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;概要内容&quot;&gt;&lt;a href=&quot;#概要内容&quot; class=&quot;headerlink&quot; title=&quot;概要内容&quot;&gt;&lt;/a&gt;概要内容&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;环境准备&lt;/li&gt;
&lt;li&gt;案例：打开Chrome百度搜索Selenium&lt;/li&gt;
&lt;li&gt;原理总结&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="自动化测试" scheme="https://yanxuewen.cn/categories/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="Python" scheme="https://yanxuewen.cn/tags/Python/"/>
    
    <category term="Selenium" scheme="https://yanxuewen.cn/tags/Selenium/"/>
    
  </entry>
  
  <entry>
    <title>结束《皇室战争》之旅</title>
    <link href="https://yanxuewen.cn/2020/11/02/Game01/"/>
    <id>https://yanxuewen.cn/2020/11/02/Game01/</id>
    <published>2020-11-02T06:15:24.223Z</published>
    <updated>2020-12-17T13:09:10.445Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一款又爱又恨的游戏"><a href="#一款又爱又恨的游戏" class="headerlink" title="一款又爱又恨的游戏"></a>一款又爱又恨的游戏</h3><ul><li>爱：<ol><li>这游戏UI和画质都做得非常精美，原画的细节做得非常逼真</li><li>3分钟一场战斗，游戏时间设置的完美</li><li>操作简单，容易上手</li></ol></li><li>恨:<ol><li>3分钟一场战斗，导致你蹲个坑都可以玩几局，有时输能让你蹲出半个多小时，最后起来酸的不行</li><li>部落战匹配规则做得不好，分段6K左右自己卡等只有10级，结果给你匹配满级的来对付你，你技术再好也是以卵击石</li><li>商店不断推出活动引诱你充值，看到你要啥卡牌、是没有金币还是没有宝石，就给你推对应的活动</li><li>影响与家人的关系，有时候连输好几把，家人跟我聊天，我说话很冲，导致跟对方吵起来</li><li>不间断活动、每天对战，让你控制不住不玩，不停想上分，影响工作和学习</li></ol></li></ul><a id="more"></a><h3 id="技巧"><a href="#技巧" class="headerlink" title="技巧"></a>技巧</h3><ol><li>对方出的每张卡都记住，等全部8张卡出完，再想怎么用当前的卡组对付它</li><li>未知对方卡组，尽量使用小费过牌，等待摸清对方卡组再出手</li><li>排兵布阵不能全部放到一块，要分散放，不然被对面一个法术全部打中</li></ol><h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h3><blockquote><p>要升级的卡组已升满，没有玩下去的欲望了，本想这个赛季冲个6500+，结果没多少时间打，中午打了一个多小时，结果卡住6150上不去了，那就让他停留在6150结束这段旅程。接下来开启新的篇章，好好学习、好好工作，这样才能有好的未来</p></blockquote><p><img data-src="https://cdn.jsdelivr.net/gh/aa4790139/BlogPicBed@master/img/222.png" alt=""></p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;一款又爱又恨的游戏&quot;&gt;&lt;a href=&quot;#一款又爱又恨的游戏&quot; class=&quot;headerlink&quot; title=&quot;一款又爱又恨的游戏&quot;&gt;&lt;/a&gt;一款又爱又恨的游戏&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;爱：&lt;ol&gt;
&lt;li&gt;这游戏UI和画质都做得非常精美，原画的细节做得非常逼真&lt;/li&gt;
&lt;li&gt;3分钟一场战斗，游戏时间设置的完美&lt;/li&gt;
&lt;li&gt;操作简单，容易上手&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;恨:&lt;ol&gt;
&lt;li&gt;3分钟一场战斗，导致你蹲个坑都可以玩几局，有时输能让你蹲出半个多小时，最后起来酸的不行&lt;/li&gt;
&lt;li&gt;部落战匹配规则做得不好，分段6K左右自己卡等只有10级，结果给你匹配满级的来对付你，你技术再好也是以卵击石&lt;/li&gt;
&lt;li&gt;商店不断推出活动引诱你充值，看到你要啥卡牌、是没有金币还是没有宝石，就给你推对应的活动&lt;/li&gt;
&lt;li&gt;影响与家人的关系，有时候连输好几把，家人跟我聊天，我说话很冲，导致跟对方吵起来&lt;/li&gt;
&lt;li&gt;不间断活动、每天对战，让你控制不住不玩，不停想上分，影响工作和学习&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="游戏" scheme="https://yanxuewen.cn/categories/%E6%B8%B8%E6%88%8F/"/>
    
    
    <category term="皇室战争" scheme="https://yanxuewen.cn/tags/%E7%9A%87%E5%AE%A4%E6%88%98%E4%BA%89/"/>
    
  </entry>
  
</feed>
